{"version":3,"sources":["history.js","components/navbar/Sidebar.js","components/Button.js","components/navbar/SearchBar.js","components/Loader.js","constants/passwordConstants.js","components/content/PasswordContent.js","actions/passwordActions.js","components/content/NoteContent.js","components/content/AddressContent.js","components/screens/DashboardScreen.js","components/screens/PasswordScreen.js","components/screens/NoteScreen.js","components/screens/AddressScreen.js","components/modal/AddPasswordModal.js","components/modal/AddNoteModal.js","components/modal/EditPasswordModal.js","components/modal/AddAddressModal.js","components/modal/StandardModal.js","components/modal/DeletePasswordModal.js","App.js","store.js","reducers/passwordReducers.js","index.js"],"names":["createBrowserHistory","navigation","name","href","icon","HomeIcon","FingerPrintIcon","PaperClipIcon","MapIcon","Sidebar","className","src","alt","map","item","to","isActive","solutions","link","classNames","classes","filter","Boolean","join","Button","open","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","type","userNavigation","current","UsersIcon","FolderIcon","CalendarIcon","InboxIcon","ChartBarIcon","SearchBar","useState","sidebarOpen","setSidebarOpen","Root","show","onClose","Child","Overlay","onClick","action","method","htmlFor","id","placeholder","Items","Item","active","Loader","PASSWORD_LIST_REQUEST","PASSWORD_LIST_SUCCESS","PASSWORD_LIST_FAIL","PASSWORD_CREATE_REQUEST","PASSWORD_CREATE_SUCCESS","PASSWORD_CREATE_FAIL","PASSWORD_CREATE_RESET","PASSWORD_DELETE_REQUEST","PASSWORD_DELETE_SUCCESS","PASSWORD_DELETE_FAIL","PASSWORD_DELETE_RESET","PASSWORD_UPDATE_REQUEST","PASSWORD_UPDATE_SUCCESS","PASSWORD_UPDATE_FAIL","PASSWORD_UPDATE_RESET","PASSWORD_DETAILS_REQUEST","PASSWORD_DETAILS_SUCCESS","PASSWORD_DETAILS_FAIL","PasswordContent","props","dispatch","useDispatch","passwordList","useSelector","state","loading","error","passwords","useEffect","a","axios","get","data","payload","response","message","autoClose","title","password","url","onError","e","target","onerror","username","_id","NoteContent","fill","viewBox","stroke","vectorEffect","strokeLinecap","strokeLinejoin","strokeWidth","d","AddressContent","DashboardScreen","required","value","undefined","AddPasswordModal","passwordId","useParams","navigate","useNavigate","setOpen","cancelButtonRef","useRef","passwordCreate","successCreate","success","createdPassword","passwordDetails","passwordShown","setPasswordShown","togglePassword","static","initialFocus","onSubmit","values","formData","post","toast","render","handleSubmit","submitError","component","validate","input","meta","touched","AddNoteModal","console","log","enctype","EditPasswordModal","passwordUpdate","sitePassword","notes","put","info","updatePassword","initialValues","AddAddressModal","setValue","Date","dateValue","onChange","errors","email","RegExp","test","autoComplete","defaultCountry","Modal","Title","content","actions","t","DeletePasswordModal","history","successDelete","passwordDelete","deleteHandler","delete","deletePassword","ref","App","path","element","AddressScreen","React","Component","reducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e0021abf.chunk.js","sourcesContent":["/** @format */\n\nimport { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","/** @format */\n\nimport React from \"react\";\nimport {\n  HomeIcon,\n  MapIcon,\n  FingerPrintIcon,\n  PaperClipIcon,\n} from \"@heroicons/react/outline\";\nimport { NavLink } from \"react-router-dom\";\n\nconst navigation = [\n  { name: \"Dashboard\", href: \"/dashboard\", icon: HomeIcon },\n  {\n    name: \"Passwords\",\n    href: \"/passwords\",\n    icon: FingerPrintIcon,\n  },\n  { name: \"Notes\", href: \"/notes\", icon: PaperClipIcon },\n  { name: \"Addresses\", href: \"/addresses\", icon: MapIcon },\n];\n\nconst Sidebar = () => {\n  return (\n    <div className='flex h-screen overflow-hidden bg-gray-100'>\n      {/* Static sidebar for desktop */}\n      <div className='hidden md:flex md:flex-shrink-0'>\n        <div className='flex flex-col w-64'>\n          {/* Sidebar component, swap this element with another sidebar if you like */}\n          <div className='flex flex-col flex-grow pt-5 pb-4 overflow-y-auto bg-white border-r border-gray-200'>\n            <div className='flex items-center flex-shrink-0 px-4'>\n              <img\n                className='w-auto h-10 transition-all hover:animate-spin'\n                src='https://media.publit.io/file/noun_vault_3097826-2.svg'\n                alt='PassMan'\n              />\n              <span className='text-2xl text-gray-500 uppercase '>PassMan</span>\n            </div>\n            <div className='flex flex-col flex-grow mt-5'>\n              <nav className='flex-1 px-2 space-y-1 bg-white'>\n                {navigation.map((item) => (\n                  <NavLink\n                    key={item.name}\n                    to={item.href}\n                    className={({ isActive }) =>\n                      isActive\n                        ? \"bg-yellow-400 flex items-center px-2 py-2 text-sm font-medium text-gray-600 rounded-md group hover:bg-yellow-100 hover:text-gray-900\"\n                        : \"flex items-center px-2 py-2 text-sm font-medium text-gray-600 rounded-md group hover:bg-yellow-100 hover:text-gray-900\"\n                    }>\n                    <item.icon\n                      className='flex-shrink-0 w-6 h-6 mr-3'\n                      aria-hidden='true'\n                    />\n                    {item.name}\n                  </NavLink>\n                ))}\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { PlusSmIcon as PlusSmIconOutline } from \"@heroicons/react/outline\";\n\nimport { Popover, Transition } from \"@headlessui/react\";\n\nimport {\n  MapIcon,\n  FingerPrintIcon,\n  PaperClipIcon,\n} from \"@heroicons/react/outline\";\n\nconst solutions = [\n  {\n    name: \"Add Password\",\n    link: \"/passwords/add\",\n    icon: FingerPrintIcon,\n  },\n  {\n    name: \"Add Notes\",\n    link: \"/add/note\",\n    icon: PaperClipIcon,\n  },\n  {\n    name: \"Add Addresses\",\n    link: \"/add/address\",\n    icon: MapIcon,\n  },\n];\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nconst Button = () => {\n  return (\n    <Popover className='realtive '>\n      {({ open }) => (\n        <>\n          <Popover.Button\n            className={classNames(\n              open ? \"text-gray-900\" : \"text-gray-500\",\n              \"group p-3 m-4 mb-20 mr-4 z-40 bg-yellow-500 absolute bottom-0 right-0  rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none \"\n            )}>\n            <PlusSmIconOutline\n              className='w-8 h-8 text-white'\n              aria-hidden='true'\n            />\n          </Popover.Button>\n\n          <Transition\n            as={Fragment}\n            enter='transition ease-out duration-200'\n            enterFrom='opacity-0 translate-y-1'\n            enterTo='opacity-100 translate-y-0'\n            leave='transition ease-in duration-150'\n            leaveFrom='opacity-100 translate-y-0'\n            leaveTo='opacity-0 translate-y-1'>\n            <Popover.Panel className='absolute bottom-0 right-0 z-40 pb-4 pr-4 '>\n              <div className='overflow-hidden rounded-lg shadow-lg'>\n                <div className='relative grid gap-6 px-5 py-6 bg-white sm:gap-8 sm:p-8'>\n                  {solutions.map((item) => (\n                    <Link\n                      key={item.name}\n                      to={item.link}\n                      type='button'\n                      className='flex items-start p-2 -m-3 transition duration-150 ease-in-out rounded-lg '>\n                      <item.icon\n                        className='flex-shrink-0 w-6 h-6 text-blue-600'\n                        aria-hidden='true'\n                      />\n                      <div className='ml-4'>\n                        <p className='text-base font-medium text-gray-900'>\n                          {item.name}\n                        </p>\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            </Popover.Panel>\n          </Transition>\n        </>\n      )}\n    </Popover>\n  );\n};\n\nexport default Button;\n","/** @format */\n\nimport React from \"react\";\nimport { Fragment, useState } from \"react\";\nimport {\n  BellIcon,\n  CalendarIcon,\n  ChartBarIcon,\n  FolderIcon,\n  HomeIcon,\n  InboxIcon,\n  MenuAlt2Icon,\n  UsersIcon,\n  XIcon,\n} from \"@heroicons/react/outline\";\nimport { Dialog, Menu, Transition } from \"@headlessui/react\";\nimport { SearchIcon } from \"@heroicons/react/solid\";\nimport Button from \"../Button\";\n\nconst userNavigation = [\n  { name: \"Your Profile\", href: \"#\" },\n  { name: \"Settings\", href: \"#\" },\n  { name: \"Sign out\", href: \"#\" },\n];\n\nconst navigation = [\n  { name: \"Dashboard\", href: \"#\", icon: HomeIcon, current: true },\n  { name: \"Team\", href: \"#\", icon: UsersIcon, current: false },\n  { name: \"Projects\", href: \"#\", icon: FolderIcon, current: false },\n  { name: \"Calendar\", href: \"#\", icon: CalendarIcon, current: false },\n  { name: \"Documents\", href: \"#\", icon: InboxIcon, current: false },\n  { name: \"Reports\", href: \"#\", icon: ChartBarIcon, current: false },\n];\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nconst SearchBar = () => {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  return (\n    <div className=''>\n      <Transition.Root show={sidebarOpen} as={Fragment}>\n        <Dialog\n          as='div'\n          className='fixed inset-0 z-40 flex md:hidden'\n          onClose={setSidebarOpen}>\n          <Transition.Child\n            as={Fragment}\n            enter='transition-opacity ease-linear duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='transition-opacity ease-linear duration-300'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'>\n            <Dialog.Overlay className='fixed inset-0 bg-gray-600 bg-opacity-75' />\n          </Transition.Child>\n          <Transition.Child\n            as={Fragment}\n            enter='transition ease-in-out duration-300 transform'\n            enterFrom='-translate-x-full'\n            enterTo='translate-x-0'\n            leave='transition ease-in-out duration-300 transform'\n            leaveFrom='translate-x-0'\n            leaveTo='-translate-x-full'>\n            <div className='relative flex flex-col flex-1 w-full max-w-xs pt-5 pb-4 bg-white'>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-in-out duration-300'\n                enterFrom='opacity-0'\n                enterTo='opacity-100'\n                leave='ease-in-out duration-300'\n                leaveFrom='opacity-100'\n                leaveTo='opacity-0'>\n                <div className='absolute top-0 right-0 pt-2 -mr-12'>\n                  <button\n                    type='button'\n                    className='flex items-center justify-center w-10 h-10 ml-1 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white'\n                    onClick={() => setSidebarOpen(false)}>\n                    <span className='sr-only'>Close sidebar</span>\n                    <XIcon className='w-6 h-6 text-white' aria-hidden='true' />\n                  </button>\n                </div>\n              </Transition.Child>\n              <div className='flex items-center flex-shrink-0 px-4'>\n                <img\n                  className='w-auto h-8'\n                  src='https://tailwindui.com/img/logos/workflow-logo-indigo-600-mark-gray-800-text.svg'\n                  alt='Workflow'\n                />\n              </div>\n              <div className='flex-1 h-0 mt-5 overflow-y-auto'>\n                <nav className='px-2 space-y-1'>\n                  {navigation.map((item) => (\n                    <a\n                      key={item.name}\n                      href={item.href}\n                      className={classNames(\n                        item.current\n                          ? \"bg-gray-100 text-gray-900\"\n                          : \"text-gray-600 hover:bg-gray-50 hover:text-gray-900\",\n                        \"group flex items-center px-2 py-2 text-base font-medium rounded-md\"\n                      )}>\n                      <item.icon\n                        className={classNames(\n                          item.current\n                            ? \"text-gray-500\"\n                            : \"text-gray-400 group-hover:text-gray-500\",\n                          \"mr-4 flex-shrink-0 h-6 w-6\"\n                        )}\n                        aria-hidden='true'\n                      />\n                      {item.name}\n                    </a>\n                  ))}\n                </nav>\n              </div>\n            </div>\n          </Transition.Child>\n          <div className='flex-shrink-0 w-14' aria-hidden='true'>\n            {/* Dummy element to force sidebar to shrink to fit close icon */}\n          </div>\n        </Dialog>\n      </Transition.Root>\n      <div className='relative z-10 flex flex-shrink-0 h-16 bg-white shadow'>\n        <button\n          type='button'\n          className='px-4 text-gray-500 border-r border-gray-200 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500 md:hidden'\n          onClick={() => setSidebarOpen(true)}>\n          <span className='sr-only'>Open sidebar</span>\n          <MenuAlt2Icon className='w-6 h-6' aria-hidden='true' />\n        </button>\n        <div className='flex justify-between flex-1 px-4'>\n          <div className='flex flex-1'>\n            <form className='flex w-full md:ml-0' action='#' method='GET'>\n              <label htmlFor='search-field' className='sr-only'>\n                Search\n              </label>\n              <div className='relative w-full text-gray-400 focus-within:text-gray-600'>\n                <div className='absolute inset-y-0 left-0 flex items-center pointer-events-none'>\n                  <SearchIcon className='w-5 h-5' aria-hidden='true' />\n                </div>\n                <input\n                  id='search-field'\n                  className='block w-full h-full py-2 pl-8 pr-3 text-gray-900 placeholder-gray-500 border-transparent focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm'\n                  placeholder='Search'\n                  type='search'\n                  name='search'\n                />\n              </div>\n            </form>\n          </div>\n          <div className='flex items-center ml-4 md:ml-6'>\n            <button\n              type='button'\n              className='p-1 text-gray-400 bg-white rounded-full hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n              <span className='sr-only'>View notifications</span>\n              <BellIcon className='w-6 h-6' aria-hidden='true' />\n            </button>\n\n            {/* Profile dropdown */}\n            <Menu as='div' className='relative ml-3'>\n              <div>\n                <Menu.Button className='flex items-center max-w-xs text-sm bg-white rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                  <span className='sr-only'>Open user menu</span>\n                  <img\n                    className='w-8 h-8 rounded-full'\n                    src='https://images.unsplash.com/photo-1598013924228-f336656b163c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1746&q=80&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'\n                    alt=''\n                  />\n                </Menu.Button>\n              </div>\n              <Transition\n                as={Fragment}\n                enter='transition ease-out duration-100'\n                enterFrom='transform opacity-0 scale-95'\n                enterTo='transform opacity-100 scale-100'\n                leave='transition ease-in duration-75'\n                leaveFrom='transform opacity-100 scale-100'\n                leaveTo='transform opacity-0 scale-95'>\n                <Menu.Items className='absolute right-0 w-48 py-1 mt-2 origin-top-right bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none'>\n                  {userNavigation.map((item) => (\n                    <Menu.Item key={item.name}>\n                      {({ active }) => (\n                        <a\n                          href={item.href}\n                          className={classNames(\n                            active ? \"bg-gray-100\" : \"\",\n                            \"block px-4 py-2 text-sm text-gray-700\"\n                          )}>\n                          {item.name}\n                        </a>\n                      )}\n                    </Menu.Item>\n                  ))}\n                </Menu.Items>\n              </Transition>\n            </Menu>\n          </div>\n        </div>\n      </div>\n      <Button />\n    </div>\n  );\n};\n\nexport default SearchBar;\n","/** @format */\n\nimport React from \"react\";\nimport { CollectionIcon } from \"@heroicons/react/outline\";\n\nconst Loader = () => {\n  return (\n    <div className='flex justify-center '>\n      <CollectionIcon className='w-10 h-10 animate-pulse' />\n    </div>\n  );\n};\n\nexport default Loader;\n","/** @format */\n//PASSWORDS\n\nexport const PASSWORD_LIST_REQUEST = \"PASSWORD_LIST_REQUEST\";\nexport const PASSWORD_LIST_SUCCESS = \"PASSWORD_LIST_SUCCESS\";\nexport const PASSWORD_LIST_FAIL = \"PASSWORD_LIST_FAIL\";\n\nexport const PASSWORD_CREATE_REQUEST = \"PASSWORD_CREATE_REQUEST\";\nexport const PASSWORD_CREATE_SUCCESS = \"PASSWORD_CREATE_SUCCESS\";\nexport const PASSWORD_CREATE_FAIL = \"PASSWORD_CREATE_FAIL\";\nexport const PASSWORD_CREATE_RESET = \"PASSWORD_CREATE_RESET\";\n\nexport const PASSWORD_DELETE_REQUEST = \"PASSWORD_DELETE_REQUEST\";\nexport const PASSWORD_DELETE_SUCCESS = \"PASSWORD_DELETE_SUCCESS\";\nexport const PASSWORD_DELETE_FAIL = \"PASSWORD_DELETE_FAIL\";\nexport const PASSWORD_DELETE_RESET = \"PASSWORD_DELETE_RESET\";\n\nexport const PASSWORD_UPDATE_REQUEST = \"PASSWORD_UPDATE_REQUEST\";\nexport const PASSWORD_UPDATE_SUCCESS = \"PASSWORD_UPDATE_SUCCESS\";\nexport const PASSWORD_UPDATE_FAIL = \"PASSWORD_UPDATE_FAIL\";\nexport const PASSWORD_UPDATE_RESET = \"PASSWORD_UPDATE_RESET\";\n\nexport const PASSWORD_DETAILS_REQUEST = \"PASSWORD_DETAILS_REQUEST\";\nexport const PASSWORD_DETAILS_SUCCESS = \"PASSWORD_DETAILS_SUCCESS\";\nexport const PASSWORD_DETAILS_FAIL = \"PASSWORD_DETAILS_FAIL\";\n\n//NOTES\n\n// export const NOTES_LIST_REQUEST = \"NOTES_LIST_REQUEST\";\n// export const NOTES_LIST_SUCCESS = \"NOTES_LIST_SUCCESS\";\n// export const NOTES_LIST_FAIL = \"NOTES_LIST_FAIL\";\n\n// export const NOTES_CREATE_REQUEST = \"NOTES_LIST_REQUEST\";\n// export const NOTES_CREATE_SUCCESS = \"NOTES_LIST_SUCCESS\";\n// export const NOTES_CREATE_FAIL = \"NOTES_LIST_FAIL\";\n// export const NOTES_CREATE_RESET = \"NOTES_LIST_RESET\";\n\n// export const NOTES_DELETE_REQUEST = \"NOTES_LIST_REQUEST\";\n// export const NOTES_DELETE_SUCCESS = \"NOTES_LIST_SUCCESS\";\n// export const NOTES_DELETE_FAIL = \"NOTES_LIST_FAIL\";\n\n// export const NOTES_EDIT_REQUEST = \"NOTES_LIST_REQUEST\";\n// export const NOTES_EDIT_SUCCESS = \"NOTES_LIST_SUCCESS\";\n// export const NOTES_EDIT_FAIL = \"NOTES_LIST_FAIL\";\n","/** @format */\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  TrashIcon,\n  PencilIcon,\n  ChevronDoubleUpIcon,\n} from \"@heroicons/react/outline\";\nimport Loader from \"../Loader\";\nimport { listPasswords } from \"../../actions/passwordActions\";\n\n//Toastify\nimport { ToastContainer } from \"react-toastify\";\n\nconst PasswordContent = (props) => {\n  const dispatch = useDispatch();\n  const passwordList = useSelector((state) => state.passwordList);\n  const { loading, error, passwords } = passwordList;\n\n  useEffect(() => {\n    dispatch(listPasswords());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <main className='relative flex-1 overflow-y-auto focus:outline-none'>\n        <div className='py-6'>\n          <div className='px-4 mx-auto max-w-7xl sm:px-6 md:px-8'>\n            <div>\n              <ToastContainer autoClose={2000} />\n              <h1 className='text-2xl font-semibold text-gray-900'>\n                {props.title}\n              </h1>\n              <Fragment>\n                {loading ? (\n                  <Loader />\n                ) : error ? (\n                  <h3 className='animate-pulse'>{error}</h3>\n                ) : (\n                  // {passwords !== null ? <Fragment> </Fragment>  : <Fragment> </Fragment>}\n                  <Fragment>\n                    <ul className='grid grid-cols-1 gap-5 mt-3 sm:gap-6 sm:grid-cols-2 lg:grid-cols-4 group'>\n                      {passwords.map((password) => (\n                        <div key={password._id}>\n                          <div className='border-r-4 rounded-md hover:border-yellow-400'>\n                            <li className='flex col-span-1 rounded-md shadow-sm'>\n                              <img\n                                alt='logo '\n                                src={`https://logo.clearbit.com/${password.url}`}\n                                onError={(e) => {\n                                  e.target.onerror = null;\n                                  e.target.src =\n                                    \"https://media.publit.io/file/MiscPasswordIcon.svg\";\n                                }}\n                                className='flex items-center flex-shrink-0 object-contain text-sm font-medium text-white shadow-sm w-14 rounded-l-md'\n                              />\n\n                              <div className='flex flex-row-reverse items-center flex-1 truncate bg-white border-t border-b border-r border-gray-200 rounded-r-md'>\n                                <div className='flex-1 px-4 py-2 text-sm truncate'>\n                                  <a\n                                    href={password.href}\n                                    className='font-medium text-gray-900 hover:text-gray-600'>\n                                    {password.username}\n                                  </a>\n                                  <p className='text-gray-500 '>\n                                    {password.url}\n                                  </p>\n                                </div>\n                                <div className='absolute flex-shrink-0 m-2 transform scale-0 group-hover:scale-100 '>\n                                  <a\n                                    href={`https://${password.url}`}\n                                    className='inline-flex items-center justify-center w-8 h-8 mr-1 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\n                                    <ChevronDoubleUpIcon\n                                      className='w-5 h-5 text-gray-400 rounded hover:bg-blue-700 hover:text-gray-100'\n                                      aria-hidden='true'\n                                    />\n                                  </a>\n                                  <Link\n                                    to={`/password/${password._id}/edit`}\n                                    type='button'\n                                    className='inline-flex items-center justify-center w-8 h-8 mr-1 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\n                                    <PencilIcon\n                                      className='w-5 h-5 text-gray-400 rounded hover:bg-gray-800 hover:text-gray-100'\n                                      aria-hidden='true'\n                                    />\n                                  </Link>\n                                  <Link\n                                    to={`/password/${password._id}/delete`}\n                                    type='button'\n                                    className='inline-flex items-center justify-center w-8 h-8 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\n                                    <TrashIcon\n                                      className='w-5 h-5 text-gray-400 rounded hover:bg-red-600 hover:text-gray-100'\n                                      aria-hidden='true'\n                                    />\n                                  </Link>\n                                </div>\n                              </div>\n                            </li>\n                          </div>\n                        </div>\n                      ))}\n                    </ul>{\" \"}\n                  </Fragment>\n                )}\n              </Fragment>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default PasswordContent;\n","/** @format */\nimport axios from \"axios\";\nimport {\n  PASSWORD_LIST_REQUEST,\n  PASSWORD_LIST_SUCCESS,\n  PASSWORD_LIST_FAIL,\n  PASSWORD_DELETE_REQUEST,\n  PASSWORD_DELETE_SUCCESS,\n  PASSWORD_DELETE_FAIL,\n  PASSWORD_CREATE_REQUEST,\n  PASSWORD_CREATE_SUCCESS,\n  PASSWORD_CREATE_FAIL,\n  PASSWORD_DETAILS_REQUEST,\n  PASSWORD_DETAILS_SUCCESS,\n  PASSWORD_DETAILS_FAIL,\n  PASSWORD_UPDATE_REQUEST,\n  PASSWORD_UPDATE_SUCCESS,\n  PASSWORD_UPDATE_FAIL,\n} from \"../constants/passwordConstants\";\n\nimport { toast } from \"react-toastify\";\n\nexport const listPasswords = () => async (dispatch) => {\n  try {\n    dispatch({ type: PASSWORD_LIST_REQUEST });\n\n    const { data } = await axios.get(\"api/passwords\");\n\n    dispatch({\n      type: PASSWORD_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PASSWORD_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createPassword = (formData) => async (dispatch) => {\n  try {\n    dispatch({ type: PASSWORD_CREATE_REQUEST });\n\n    const { data } = await axios.post(`/api/passwords/`, formData);\n\n    dispatch({\n      type: PASSWORD_CREATE_SUCCESS,\n      payload: data,\n    });\n    toast.success(\"Password Created\");\n  } catch (error) {\n    dispatch({\n      type: PASSWORD_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listPasswordDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PASSWORD_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/passwords/${id}`);\n\n    dispatch({\n      type: PASSWORD_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PASSWORD_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deletePassword = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PASSWORD_DELETE_REQUEST, payload: id });\n\n    await axios.delete(`/api/passwords/${id}`);\n\n    dispatch({\n      type: PASSWORD_DELETE_SUCCESS,\n    });\n    toast.error(\"Password Deleted\");\n  } catch (error) {\n    dispatch({\n      type: PASSWORD_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updatePassword = (password) => async (dispatch) => {\n  try {\n    dispatch({ type: PASSWORD_UPDATE_REQUEST });\n\n    const { data } = await axios.put(\n      `/api/passwords/${password._id}`,\n      password\n    );\n    dispatch({\n      type: PASSWORD_UPDATE_SUCCESS,\n      payload: data,\n    });\n    dispatch({ type: PASSWORD_DETAILS_SUCCESS, payload: data });\n    toast.info(\"Password Updated\");\n  } catch (error) {\n    dispatch({\n      type: PASSWORD_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","/** @format */\n\nimport React from \"react\";\nimport { PaperClipIcon } from \"@heroicons/react/solid\";\n\nconst NoteContent = (props) => {\n  return (\n    <div>\n      <main className='relative flex-1 overflow-y-auto focus:outline-none'>\n        <div className='py-6'>\n          <div className='px-4 mx-auto max-w-7xl sm:px-6 md:px-8'>\n            <h1 className='text-2xl font-semibold text-gray-900'>\n              {props.title}\n            </h1>\n          </div>\n          <div className='text-center '>\n            <svg\n              className='w-12 h-12 mx-auto text-gray-400'\n              fill='none'\n              viewBox='0 0 24 24'\n              stroke='currentColor'\n              aria-hidden='true'>\n              <path\n                vectorEffect='non-scaling-stroke'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                strokeWidth={2}\n                d='M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z'\n              />\n            </svg>\n            <h3 className='mt-2 text-sm font-medium text-gray-900'>No notes</h3>\n            <p className='mt-1 text-sm text-gray-500'>\n              Get started by creating a new note.\n            </p>\n            <div className='mt-6'>\n              <button\n                type='button'\n                className='inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-yellow-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                <PaperClipIcon\n                  className='w-5 h-5 mr-2 -ml-1'\n                  aria-hidden='true'\n                />\n                New Note\n              </button>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default NoteContent;\n","/** @format */\n\nimport React from \"react\";\nimport { MapIcon } from \"@heroicons/react/solid\";\n\nconst AddressContent = (props) => {\n  return (\n    <div>\n      <main className='relative flex-1 overflow-y-auto focus:outline-none'>\n        <div className='py-6'>\n          <div className='px-4 mx-auto max-w-7xl sm:px-6 md:px-8'>\n            <h1 className='text-2xl font-semibold text-gray-900'>\n              {props.title}\n            </h1>\n          </div>\n          <div className='text-center'>\n            <svg\n              className='w-12 h-12 mx-auto text-gray-400'\n              fill='none'\n              viewBox='0 0 24 24'\n              stroke='currentColor'\n              aria-hidden='true'>\n              <path\n                vectorEffect='non-scaling-stroke'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                strokeWidth={2}\n                d='M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z'\n              />\n            </svg>\n            <h3 className='mt-2 text-sm font-medium text-gray-900'>No notes</h3>\n            <p className='mt-1 text-sm text-gray-500'>\n              Get started by creating a new address.\n            </p>\n            <div className='mt-6'>\n              <button\n                type='button'\n                className='inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-yellow-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                <MapIcon className='w-5 h-5 mr-2 -ml-1' aria-hidden='true' />\n                New Address\n              </button>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default AddressContent;\n","/** @format */\n\nimport React from \"react\";\nimport Sidebar from \"../navbar/Sidebar\";\nimport SearchBar from \"../navbar/SearchBar\";\n\nimport PasswordContent from \"../content/PasswordContent\";\nimport NoteContent from \"../content/NoteContent\";\nimport AddressContent from \"../content/AddressContent\";\n\nconst DashboardScreen = () => {\n  return (\n    <div className='relative flex flex-1 h-screen overflow-hidden bg-gray-100'>\n      <Sidebar />\n      <div className='flex flex-col flex-1 w-0 overflow-hidden'>\n        <SearchBar />\n\n        <PasswordContent title='Passwords' />\n        <NoteContent title='Notes' />\n        <AddressContent title='Addresses' />\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardScreen;\n","/** @format */\n\nimport React from \"react\";\nimport Sidebar from \"../navbar/Sidebar\";\nimport SearchBar from \"../navbar/SearchBar\";\nimport PasswordContent from \"../content/PasswordContent\";\n\nconst DashboardScreen = () => {\n  return (\n    <div className='relative flex flex-1 h-screen overflow-auto bg-gray-100'>\n      <Sidebar />\n      <div className='flex flex-col flex-1 w-0 overflow-auto'>\n        <SearchBar />\n        <PasswordContent title='Passwords' />\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardScreen;\n","/** @format */\n\nimport React from \"react\";\nimport Sidebar from \"../navbar/Sidebar\";\nimport SearchBar from \"../navbar/SearchBar\";\nimport NoteContent from \"../content/NoteContent\";\n\nconst DashboardScreen = () => {\n  return (\n    <div className='relative flex flex-1 h-screen overflow-hidden bg-gray-100'>\n      <Sidebar />\n      <div className='flex flex-col flex-1 w-0 overflow-hidden'>\n        <SearchBar />\n        <NoteContent title='Notes' />\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardScreen;\n","/** @format */\n\nimport React from \"react\";\nimport Sidebar from \"../navbar/Sidebar\";\nimport SearchBar from \"../navbar/SearchBar\";\nimport AddressContent from \"../content/AddressContent\";\n\nconst DashboardScreen = () => {\n  return (\n    <div className='relative flex flex-1 h-screen overflow-hidden bg-gray-100'>\n      <Sidebar />\n      <div className='flex flex-col flex-1 w-0 overflow-hidden'>\n        <SearchBar />\n        <AddressContent title='Addresses' />\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardScreen;\n","/** @format */\nimport React from \"react\";\nimport { Fragment, useState, useRef, useEffect } from \"react\";\nimport { useNavigate, Link, useParams } from \"react-router-dom\";\n\n//Redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPassword } from \"../../actions/passwordActions\";\nimport { PASSWORD_CREATE_RESET } from \"../../constants/passwordConstants\";\n\n//Final Form\nimport { Form, Field } from \"react-final-form\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { XCircleIcon, EyeIcon, EyeOffIcon } from \"@heroicons/react/solid\";\n\nconst required = (value) => (value ? undefined : \"Required\");\n\nconst AddPasswordModal = () => {\n  const dispatch = useDispatch();\n  const passwordId = useParams();\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(true);\n\n  const cancelButtonRef = useRef(null);\n\n  const passwordCreate = useSelector((state) => state.passwordCreate);\n  const {\n    // loading: loadingCreate,\n    // error: errorCreate,\n    success: successCreate,\n    password: createdPassword,\n  } = passwordCreate;\n  const passwordDetails = useSelector((state) => state.passwordDetails);\n  const { password } = passwordDetails;\n\n  useEffect(() => {\n    dispatch({ type: PASSWORD_CREATE_RESET });\n    if (successCreate) {\n      navigate(\"/\");\n    }\n  }, [\n    dispatch,\n    passwordId,\n    password,\n    successCreate,\n    navigate,\n    createdPassword,\n  ]);\n\n  //TOGGLE PASSWORD VISION\n  const [passwordShown, setPasswordShown] = useState(false);\n  const togglePassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  if (!open) {\n    navigate(\"/\");\n  }\n\n  const onSubmit = (values) => {\n    dispatch(createPassword(values));\n  };\n  return (\n    <Fragment>\n      <Transition.Root show={open} as={Fragment}>\n        <Dialog\n          as='div'\n          static\n          className='fixed inset-0 z-10 overflow-y-auto'\n          initialFocus={cancelButtonRef}\n          open={open}\n          onClose={setOpen}>\n          <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\n            <div className='flex-auto'>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-out duration-300'\n                enterFrom='opacity-0'\n                enterTo='opacity-100'\n                leave='ease-in duration-200'\n                leaveFrom='opacity-100'\n                leaveTo='opacity-0'>\n                <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 ' />\n              </Transition.Child>\n\n              {/* This element is to trick the browser into centering the modal contents. */}\n              <span\n                className='hidden sm:inline-block sm:align-middle sm:h-screen'\n                aria-hidden='true'>\n                &#8203;\n              </span>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-out duration-300'\n                enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n                enterTo='opacity-100 translate-y-0 sm:scale-100'\n                leave='ease-in duration-200'\n                leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n                leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\n                {/* This controls the actual width of modal based on responsive design */}\n                <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-gray-100 rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6 lg:max-w-5xl'>\n                  <div className='px-4 py-5 sm:p-6'>\n                    <h3 className='p-2 space-y-8 text-lg font-medium leading-6 text-gray-800 bg-yellow-500 divide-y divide-gray-200 shadow-lg bg-yellow-500border-2 rounded-t-md sm:space-y-5'>\n                      Add Password\n                    </h3>\n                    <hr />\n\n                    <Form\n                      onSubmit={onSubmit}\n                      render={({ handleSubmit, submitError }) => (\n                        <form onSubmit={handleSubmit}>\n                          <div className='p-4 space-y-8 bg-white border-2 border-gray-100 divide-y divide-gray-200 shadow-lg rounded-b-md sm:space-y-5'>\n                            <div>\n                              <div className=''>\n                                <label\n                                  htmlFor='company-website'\n                                  className='block text-sm font-medium text-gray-700'>\n                                  URL\n                                </label>\n                                <Field\n                                  name='url'\n                                  component='input'\n                                  placeholder='example.com'\n                                  validate={required}>\n                                  {({ input, meta, placeholder }) => (\n                                    <div>\n                                      <div className='flex'>\n                                        <span className='block px-4 py-2 pl-1 mb-2 text-gray-500 border border-r-0 border-gray-300 border- rounded-l-md bg-gray-50'>\n                                          https://\n                                        </span>\n                                        <input\n                                          {...input}\n                                          placeholder={placeholder}\n                                          className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 shadow rounded-r-md text-l focus:outline-none border-gray focus:border-blue-500'\n                                        />\n                                      </div>\n                                      {meta.error && meta.touched && (\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                          <div className='flex'>\n                                            <div className='flex-shrink-0'>\n                                              <XCircleIcon\n                                                className='w-5 h-5 text-red-400'\n                                                aria-hidden='true'\n                                              />\n                                            </div>\n                                            <div className='ml-3'>\n                                              <h3 className='text-sm font-medium text-red-800'>\n                                                {meta.error}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  )}\n                                </Field>\n                              </div>\n\n                              <div className='grid grid-cols-6 gap-6 '>\n                                <Field\n                                  name='username'\n                                  component='input'\n                                  placeholder='Enter Username'\n                                  validate={required}>\n                                  {({ input, meta, placeholder }) => (\n                                    <div className='col-span-6 sm:col-span-3'>\n                                      <div>\n                                        <label\n                                          htmlFor='first-name'\n                                          className='block text-sm font-medium text-gray-700'>\n                                          Username\n                                        </label>\n                                        <input\n                                          type='text'\n                                          {...input}\n                                          placeholder={placeholder}\n                                          className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                                        />\n                                      </div>\n                                      {meta.error && meta.touched && (\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                          <div className='flex'>\n                                            <div className='flex-shrink-0'>\n                                              <XCircleIcon\n                                                className='w-5 h-5 text-red-400'\n                                                aria-hidden='true'\n                                              />\n                                            </div>\n                                            <div className='ml-3'>\n                                              <h3 className='text-sm font-medium text-red-800'>\n                                                {meta.error}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  )}\n                                </Field>\n                                <Field\n                                  name='sitePassword'\n                                  component='input'\n                                  placeholder='Enter Password'\n                                  validate={required}>\n                                  {({ input, meta, placeholder }) => (\n                                    <div className='col-span-6 sm:col-span-3'>\n                                      <div>\n                                        <label\n                                          htmlFor='first-name'\n                                          className='block text-sm font-medium text-gray-700'>\n                                          Site Password\n                                        </label>\n                                        <div className='flex '>\n                                          <input\n                                            type={\n                                              passwordShown\n                                                ? \"text\"\n                                                : \"password\"\n                                            }\n                                            {...input}\n                                            placeholder={placeholder}\n                                            className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-t-2 border-b-2 border-l-2 border-gray-300 shadow rounded-l-md text-l focus:outline-none focus:border-blue-500'\n                                          />\n                                          <span className=''>\n                                            <div className='relative grid gap-0 px-2 py-2 bg-gray-100 border-2 border-t-2 border-b-2 border-r-2 border-gray-300 shadow focus:outline-none hover:bg-gray-200 rounded-r-md sm:gap-2 sm:p-x-6 '>\n                                              <button\n                                                type='button'\n                                                onClick={togglePassword}\n                                                className='flex-shrink-0 w-6 h-auto text-indigo-600 focus:outline-none'\n                                                aria-hidden='true'>\n                                                {passwordShown ? (\n                                                  <EyeOffIcon />\n                                                ) : (\n                                                  <EyeIcon />\n                                                )}\n                                              </button>\n                                            </div>\n                                          </span>\n                                        </div>\n                                      </div>\n\n                                      {meta.error && meta.touched && (\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                          <div className='flex'>\n                                            <div className='flex-shrink-0'>\n                                              <XCircleIcon\n                                                className='w-5 h-5 text-red-400'\n                                                aria-hidden='true'\n                                              />\n                                            </div>\n                                            <div className='ml-3'>\n                                              <h3 className='text-sm font-medium text-red-800'>\n                                                {meta.error}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  )}\n                                </Field>\n\n                                {submitError && (\n                                  <div className='p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md bg-red-50'>\n                                    <div className='flex'>\n                                      <div className='flex-shrink-0'>\n                                        <XCircleIcon\n                                          className='w-5 h-5 text-red-400'\n                                          aria-hidden='true'\n                                        />\n                                      </div>\n                                      <div className='ml-3'>\n                                        <h3 className='text-sm font-medium text-red-800'>\n                                          {submitError}\n                                        </h3>\n                                      </div>\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n\n                              <Field\n                                name='notes'\n                                component='textarea'\n                                placeholder='Notes'\n                                className='box-border block w-full h-32 p-4 px-4 py-2 pl-1 mb-2 border-4 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                              />\n                            </div>\n                            <div className='pt-5'>\n                              <div className='flex justify-end'>\n                                <Link\n                                  to='/passwords'\n                                  type='button'\n                                  className='px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                                  Cancel\n                                </Link>\n\n                                <button\n                                  type='submit'\n                                  className='inline-flex justify-center px-4 py-2 ml-3 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                                  Create\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </form>\n                      )}\n                    />\n                  </div>\n                </div>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition.Root>\n    </Fragment>\n  );\n};\n\nexport default AddPasswordModal;\n","/** @format */\n\nimport { Fragment, useState, useRef } from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nimport { Form, Field } from \"react-final-form\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { XCircleIcon } from \"@heroicons/react/solid\";\n\nconst required = (value) => (value ? undefined : \"Required\");\n\nconst AddNoteModal = () => {\n  const [open, setOpen] = useState(true);\n\n  const cancelButtonRef = useRef(null);\n\n  if (!open) {\n    return <Navigate to='/' />;\n  }\n\n  const onSubmit = (values) => {\n    console.log(values);\n  };\n  return (\n    <Fragment>\n      <Transition.Root show={open} as={Fragment}>\n        <Dialog\n          as='div'\n          static\n          className='fixed inset-0 z-10 overflow-y-auto'\n          initialFocus={cancelButtonRef}\n          open={open}\n          onClose={setOpen}>\n          <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\n            <div className='flex-auto'>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-out duration-300'\n                enterFrom='opacity-0'\n                enterTo='opacity-100'\n                leave='ease-in duration-200'\n                leaveFrom='opacity-100'\n                leaveTo='opacity-0'>\n                <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 ' />\n              </Transition.Child>\n\n              {/* This element is to trick the browser into centering the modal contents. */}\n              <span\n                className='hidden sm:inline-block sm:align-middle sm:h-screen'\n                aria-hidden='true'>\n                &#8203;\n              </span>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-out duration-300'\n                enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n                enterTo='opacity-100 translate-y-0 sm:scale-100'\n                leave='ease-in duration-200'\n                leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n                leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\n                {/* This controls the actual width of modal based on responsive design */}\n                <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-gray-100 rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6 lg:max-w-5xl'>\n                  <div className='px-4 py-5 sm:p-6'>\n                    <h3 className='p-2 space-y-8 text-lg font-medium leading-6 text-gray-800 bg-yellow-500 border-gray-300 divide-y divide-gray-200 shadow-sm border-3 rounded-t-md sm:space-y-5'>\n                      Add a Secure Note\n                    </h3>\n                    <hr />\n\n                    <Form\n                      onSubmit={onSubmit}\n                      render={({ handleSubmit, submitError }) => (\n                        <form\n                          onSubmit={handleSubmit}\n                          enctype='multipart/form-data'>\n                          <div className='space-y-6'>\n                            <div className='px-4 py-5 bg-white shadow lg:rounded-b-md sm:rounded-b-md sm:p-6'>\n                              <div className='md:grid md:grid-cols-3 md:gap-6'>\n                                <div className='md:col-span-1'>\n                                  <Field\n                                    name='name'\n                                    component='input'\n                                    placeholder='Enter Name for This Note'\n                                    validate={required}>\n                                    {({ input, meta, placeholder }) => (\n                                      <div className='col-span-6 sm:col-span-3'>\n                                        <div>\n                                          <label\n                                            htmlFor='first-name'\n                                            className='block font-medium text-gray-700 text-md'>\n                                            Name\n                                          </label>\n                                          <input\n                                            type='text'\n                                            {...input}\n                                            placeholder={placeholder}\n                                            className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                                          />\n                                        </div>\n                                        {meta.error && meta.touched && (\n                                          <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                            <div className='flex'>\n                                              <div className='flex-shrink-0'>\n                                                <XCircleIcon\n                                                  className='w-5 h-5 text-red-400'\n                                                  aria-hidden='true'\n                                                />\n                                              </div>\n                                              <div className='ml-3'>\n                                                <h3 className='text-sm font-medium text-red-800'>\n                                                  {meta.error}\n                                                </h3>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        )}\n                                      </div>\n                                    )}\n                                  </Field>\n\n                                  <div className='pt-3'>\n                                    <label className='block font-medium text-gray-700 text-md'>\n                                      Attachments\n                                    </label>\n                                    <div className='flex justify-center px-6 pt-5 pb-6 mt-1 border-2 border-gray-300 border-dashed rounded-md'>\n                                      <div className='space-y-1 text-center'>\n                                        <svg\n                                          className='w-12 h-12 mx-auto text-gray-400'\n                                          stroke='currentColor'\n                                          fill='none'\n                                          viewBox='0 0 48 48'\n                                          aria-hidden='true'>\n                                          <path\n                                            d='M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02'\n                                            strokeWidth={2}\n                                            strokeLinecap='round'\n                                            strokeLinejoin='round'\n                                          />\n                                        </svg>\n                                        <div className='flex text-sm text-gray-600'>\n                                          <label\n                                            htmlFor='file-upload'\n                                            className='relative font-medium text-indigo-600 bg-white rounded-md cursor-pointer hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500'>\n                                            <span>Upload a file</span>\n                                            <input\n                                              id='file-upload'\n                                              name='noteImage'\n                                              type='file'\n                                              className='sr-only'\n                                            />\n                                          </label>\n                                          <p className='pl-1'>\n                                            or drag and drop\n                                          </p>\n                                        </div>\n                                        <p className='text-xs text-gray-500'>\n                                          PNG, JPG, GIF up to 10MB\n                                        </p>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className='pb-6 mt-5 md:mt-0 md:col-span-2'>\n                                  <Field\n                                    name='note'\n                                    component='textarea'\n                                    placeholder='Enter a Caption for This Note'\n                                    className='block w-full p-2 border border-gray-300 rounded-md shadow-sm h-96 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\n                                    validate={required}\n                                  />\n                                </div>\n                              </div>\n                              <hr />\n                              <div className='flex justify-end pt-5'>\n                                <button\n                                  type='button'\n                                  className='px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                                  Cancel\n                                </button>\n                                <button\n                                  type='submit'\n                                  className='inline-flex justify-center px-4 py-2 ml-3 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                                  Save\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </form>\n                      )}\n                    />\n                  </div>\n                </div>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition.Root>\n    </Fragment>\n  );\n};\n\nexport default AddNoteModal;\n","/** @format */\n\nimport React from \"react\";\nimport { Fragment, useState, useEffect, useRef } from \"react\";\nimport { Form, Field } from \"react-final-form\";\nimport { Dialog, Transition } from \"@headlessui/react\";\n\nimport { XCircleIcon, EyeIcon, EyeOffIcon } from \"@heroicons/react/solid\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate, useParams, useNavigate } from \"react-router-dom\";\nimport {\n  listPasswordDetails,\n  updatePassword,\n} from \"../../actions/passwordActions\";\nimport { PASSWORD_UPDATE_RESET } from \"../../constants/passwordConstants\";\n\nconst required = (value) => (value ? undefined : \"Required\");\n\nconst EditPasswordModal = () => {\n  const dispatch = useDispatch();\n  const passwordId = useParams();\n  const navigate = useNavigate();\n\n  const [open, setOpen] = useState(true);\n\n  const cancelButtonRef = useRef(null);\n\n  const passwordDetails = useSelector((state) => state.passwordDetails);\n  const { password } = passwordDetails;\n\n  const passwordUpdate = useSelector((state) => state.passwordUpdate);\n  const { success } = passwordUpdate;\n\n  useEffect(() => {\n    if (success) {\n      dispatch({ type: PASSWORD_UPDATE_RESET });\n      navigate(\"/passwords\");\n    } else {\n      if (!password.name || password._id !== passwordId) {\n        dispatch(listPasswordDetails(passwordId));\n      }\n    }\n  }, [dispatch, navigate, passwordId, password, success]);\n  let formData = {\n    url: password.url,\n    username: password.username,\n    sitePassword: password.sitePassword,\n    notes: password.notes,\n  };\n  //TOGGLE PASSWORD VISION\n  const [passwordShown, setPasswordShown] = useState(false);\n  const togglePassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  if (!open) {\n    return <Navigate to='/' />;\n  }\n\n  const onSubmit = (values) => {\n    dispatch(updatePassword({ _id: passwordId.id, values }));\n  };\n\n  return (\n    <Fragment>\n      <Transition.Root show={open} as={Fragment}>\n        <Dialog\n          as='div'\n          static\n          className='fixed inset-0 z-10 overflow-y-auto'\n          initialFocus={cancelButtonRef}\n          open={open}\n          onClose={setOpen}>\n          <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\n            <div className='flex-auto'>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-out duration-300'\n                enterFrom='opacity-0'\n                enterTo='opacity-100'\n                leave='ease-in duration-200'\n                leaveFrom='opacity-100'\n                leaveTo='opacity-0'>\n                <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 ' />\n              </Transition.Child>\n\n              {/* This element is to trick the browser into centering the modal contents. */}\n              <span\n                className='hidden sm:inline-block sm:align-middle sm:h-screen'\n                aria-hidden='true'>\n                &#8203;\n              </span>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-out duration-300'\n                enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n                enterTo='opacity-100 translate-y-0 sm:scale-100'\n                leave='ease-in duration-200'\n                leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n                leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\n                {/* This controls the actual width of modal based on responsive design */}\n                <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-gray-100 rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6 lg:max-w-5xl'>\n                  <div className='px-4 py-5 sm:p-6'>\n                    <h3 className='p-2 space-y-8 text-lg font-medium leading-6 text-gray-800 bg-yellow-500 border-2 border-gray-300 divide-y divide-gray-200 shadow-lg rounded-t-md sm:space-y-5'>\n                      Edit Password\n                    </h3>\n                    <hr />\n\n                    <Form\n                      onSubmit={onSubmit}\n                      initialValues={{\n                        ...formData,\n                      }}\n                      render={({ handleSubmit, submitError }) => (\n                        <form onSubmit={handleSubmit}>\n                          <div className='p-4 space-y-8 bg-white border-2 border-gray-100 divide-y divide-gray-200 shadow-lg rounded-b-md sm:space-y-5'>\n                            <div>\n                              <div className=''>\n                                <label\n                                  htmlFor='company-website'\n                                  className='block text-sm font-medium text-gray-700'>\n                                  URL\n                                </label>\n                                <Field\n                                  name='url'\n                                  component='input'\n                                  placeholder='example.com'\n                                  validate={required}>\n                                  {({ input, meta, placeholder }) => (\n                                    <div>\n                                      <div className='flex'>\n                                        <span className='block px-4 py-2 pl-1 mb-2 text-gray-500 border border-r-0 border-gray-300 border- rounded-l-md bg-gray-50'>\n                                          https://\n                                        </span>\n                                        <input\n                                          {...input}\n                                          placeholder={placeholder}\n                                          className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 shadow rounded-r-md text-l focus:outline-none border-gray focus:border-blue-500'\n                                        />\n                                      </div>\n                                      {meta.error && meta.touched && (\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                          <div className='flex'>\n                                            <div className='flex-shrink-0'>\n                                              <XCircleIcon\n                                                className='w-5 h-5 text-red-400'\n                                                aria-hidden='true'\n                                              />\n                                            </div>\n                                            <div className='ml-3'>\n                                              <h3 className='text-sm font-medium text-red-800'>\n                                                {meta.error}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  )}\n                                </Field>\n                              </div>\n\n                              <div className='grid grid-cols-6 gap-6 '>\n                                <Field\n                                  name='username'\n                                  component='input'\n                                  placeholder='Enter Username'\n                                  validate={required}>\n                                  {({ input, meta, placeholder }) => (\n                                    <div className='col-span-6 sm:col-span-3'>\n                                      <div>\n                                        <label\n                                          htmlFor='first-name'\n                                          className='block text-sm font-medium text-gray-700'>\n                                          Username\n                                        </label>\n                                        <input\n                                          type='text'\n                                          {...input}\n                                          placeholder={placeholder}\n                                          className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                                        />\n                                      </div>\n                                      {meta.error && meta.touched && (\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                          <div className='flex'>\n                                            <div className='flex-shrink-0'>\n                                              <XCircleIcon\n                                                className='w-5 h-5 text-red-400'\n                                                aria-hidden='true'\n                                              />\n                                            </div>\n                                            <div className='ml-3'>\n                                              <h3 className='text-sm font-medium text-red-800'>\n                                                {meta.error}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  )}\n                                </Field>\n                                <Field\n                                  name='sitePassword'\n                                  component='input'\n                                  placeholder='password.sitePassword'\n                                  validate={required}>\n                                  {({ input, meta, placeholder }) => (\n                                    <div className='col-span-6 sm:col-span-3'>\n                                      <div>\n                                        <label\n                                          htmlFor='first-name'\n                                          className='block text-sm font-medium text-gray-700'>\n                                          Site Password\n                                        </label>\n                                        <div className='flex '>\n                                          <input\n                                            type={\n                                              passwordShown\n                                                ? \"text\"\n                                                : \"password\"\n                                            }\n                                            {...input}\n                                            placeholder={placeholder}\n                                            className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-t-2 border-b-2 border-l-2 border-gray-300 shadow rounded-l-md text-l focus:outline-none focus:border-blue-500'\n                                          />\n                                          <span className=''>\n                                            <div className='relative grid gap-0 px-2 py-2 bg-gray-100 border-2 border-t-2 border-b-2 border-r-2 border-gray-300 shadow focus:outline-none hover:bg-gray-200 rounded-r-md sm:gap-2 sm:p-x-6 '>\n                                              <button\n                                                type='button'\n                                                onClick={togglePassword}\n                                                className='flex-shrink-0 w-6 h-auto text-indigo-600 focus:outline-none'\n                                                aria-hidden='true'>\n                                                {passwordShown ? (\n                                                  <EyeOffIcon />\n                                                ) : (\n                                                  <EyeIcon />\n                                                )}\n                                              </button>\n                                            </div>\n                                          </span>\n                                        </div>\n                                      </div>\n\n                                      {meta.error && meta.touched && (\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                          <div className='flex'>\n                                            <div className='flex-shrink-0'>\n                                              <XCircleIcon\n                                                className='w-5 h-5 text-red-400'\n                                                aria-hidden='true'\n                                              />\n                                            </div>\n                                            <div className='ml-3'>\n                                              <h3 className='text-sm font-medium text-red-800'>\n                                                {meta.error}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  )}\n                                </Field>\n\n                                {submitError && (\n                                  <div className='p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md bg-red-50'>\n                                    <div className='flex'>\n                                      <div className='flex-shrink-0'>\n                                        <XCircleIcon\n                                          className='w-5 h-5 text-red-400'\n                                          aria-hidden='true'\n                                        />\n                                      </div>\n                                      <div className='ml-3'>\n                                        <h3 className='text-sm font-medium text-red-800'>\n                                          {submitError}\n                                        </h3>\n                                      </div>\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n\n                              <Field\n                                name='notes'\n                                component='textarea'\n                                placeholder='Enter Notes Here'\n                                className='box-border block w-full h-32 p-4 px-4 py-2 pl-1 mb-2 border-4 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                              />\n                            </div>\n                            <div className='pt-5'>\n                              <div className='flex justify-end'>\n                                <button\n                                  type='button'\n                                  className='px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                                  Cancel\n                                </button>\n                                <button\n                                  type='submit'\n                                  className='inline-flex justify-center px-4 py-2 ml-3 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                                  Update\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </form>\n                      )}\n                    />\n                  </div>\n                </div>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition.Root>\n    </Fragment>\n  );\n};\n\nexport default EditPasswordModal;\n","/** @format */\n\nimport { Fragment, useState, useRef } from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nimport { Form, Field } from \"react-final-form\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { XCircleIcon } from \"@heroicons/react/solid\";\n\nimport \"react-phone-number-input/style.css\";\nimport PhoneInput from \"react-phone-number-input\";\n\nimport DatePicker from \"react-date-picker\";\n\nconst required = (value) => (value ? undefined : \"Required\");\n\nconst AddAddressModal = () => {\n  const [open, setOpen] = useState(true);\n  const [value, setValue] = useState();\n  const cancelButtonRef = useRef(null);\n  const [dateValue, onChange] = useState(new Date());\n  if (!open) {\n    return <Navigate to='/' />;\n  }\n\n  const onSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <Fragment>\n      <Transition.Root show={open} as={Fragment}>\n        <Dialog\n          as='div'\n          static\n          className='fixed inset-0 z-10 overflow-y-auto'\n          initialFocus={cancelButtonRef}\n          open={open}\n          onClose={setOpen}>\n          <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\n            <div className='flex-auto'>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-out duration-300'\n                enterFrom='opacity-0'\n                enterTo='opacity-100'\n                leave='ease-in duration-200'\n                leaveFrom='opacity-100'\n                leaveTo='opacity-0'>\n                <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 ' />\n              </Transition.Child>\n\n              {/* This element is to trick the browser into centering the modal contents. */}\n              <span\n                className='hidden sm:inline-block sm:align-middle sm:h-screen'\n                aria-hidden='true'>\n                &#8203;\n              </span>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-out duration-300'\n                enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n                enterTo='opacity-100 translate-y-0 sm:scale-100'\n                leave='ease-in duration-200'\n                leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n                leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\n                {/* This controls the actual width of modal based on responsive design */}\n                <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-gray-100 rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6 lg:max-w-5xl'>\n                  <div className='px-4 py-5 sm:p-6'>\n                    <h3 className='p-2 space-y-8 text-lg font-medium leading-6 text-gray-800 bg-yellow-500 border-gray-300 divide-y divide-gray-200 shadow-sm border-3 rounded-t-md sm:space-y-5'>\n                      Add an Address\n                    </h3>\n\n                    <Form\n                      onSubmit={onSubmit}\n                      validate={(values) => {\n                        const errors = {};\n                        if (values.email !== \"undefined\") {\n                          var pattern = new RegExp(\n                            /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\n                          );\n\n                          if (!pattern.test(values.email)) {\n                            errors.email = \"Please enter valid email address.\";\n                          }\n                        }\n                        return errors;\n                      }}\n                      render={({ handleSubmit, submitError }) => (\n                        <form onSubmit={handleSubmit}>\n                          <div className='space-y-6'>\n                            <div className='px-4 py-5 bg-white border-gray-100 shadow sm:overflow-hidden border-1 lg:rounded-b-md sm:rounded-b-md rounded-b-md sm:p-6'>\n                              <div className='md:grid md:grid-cols-3 md:gap-6 '>\n                                <div className='col-span-1 '>\n                                  <Field\n                                    name='name'\n                                    component='input'\n                                    placeholder='Enter Name for This Address'\n                                    validate={required}>\n                                    {({ input, meta, placeholder }) => (\n                                      <div className='col-span-6 sm:col-span-3'>\n                                        <div>\n                                          <label\n                                            htmlFor='first-name'\n                                            className='block font-medium text-gray-700 text-md'>\n                                            Name\n                                          </label>\n                                          <input\n                                            type='text'\n                                            {...input}\n                                            placeholder={placeholder}\n                                            className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                                          />\n                                        </div>\n                                        {meta.error && meta.touched && (\n                                          <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                            <div className='flex'>\n                                              <div className='flex-shrink-0'>\n                                                <XCircleIcon\n                                                  className='w-5 h-5 text-red-400'\n                                                  aria-hidden='true'\n                                                />\n                                              </div>\n                                              <div className='ml-3'>\n                                                <h3 className='text-sm font-medium text-red-800'>\n                                                  {meta.error}\n                                                </h3>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        )}\n                                      </div>\n                                    )}\n                                  </Field>\n\n                                  <div className='pt-3'>\n                                    <label className='block font-medium text-gray-700 text-md'>\n                                      Attachments\n                                    </label>\n                                    <div className='flex justify-center px-6 pt-5 pb-6 mt-1 border border-gray-300 border-dashed rounded-md'>\n                                      <div className='space-y-1 text-center'>\n                                        <svg\n                                          className='w-12 h-12 mx-auto text-gray-400'\n                                          stroke='currentColor'\n                                          fill='none'\n                                          viewBox='0 0 48 48'\n                                          aria-hidden='true'>\n                                          <path\n                                            d='M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02'\n                                            strokeWidth={2}\n                                            strokeLinecap='round'\n                                            strokeLinejoin='round'\n                                          />\n                                        </svg>\n                                        <div className='flex text-sm text-gray-600'>\n                                          <label\n                                            htmlFor='file-upload'\n                                            className='relative font-medium text-indigo-600 bg-white rounded-md cursor-pointer hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500'>\n                                            <span>Upload a file</span>\n                                            <input\n                                              id='file-upload'\n                                              name='file-upload'\n                                              type='file'\n                                              className='sr-only'\n                                            />\n                                          </label>\n                                          <p className='pl-1'>\n                                            or drag and drop\n                                          </p>\n                                        </div>\n                                        <p className='text-xs text-gray-500'>\n                                          PNG, JPG, GIF up to 10MB\n                                        </p>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n\n                                {/* ///////////////////////////Information Fill Out/////////////////////// */}\n\n                                <div className='col-span-1 pb-6 mt-5 md:mt-0 md:col-span-2 '>\n                                  <div className='mt-5 md:mt-0 md:col-span-2'>\n                                    <div className='overflow-hidden shadow sm:rounded-md'>\n                                      <div className='px-4 py-5 bg-white sm:p-6'>\n                                        <div className='grid grid-cols-6 gap-6 md:col-span-1'>\n                                          <div className='block col-span-6 text-xl underline sm:col-span-6 lg:col-span-6'>\n                                            Basic Information\n                                          </div>\n                                          <div className='col-span-6 sm:col-span-3'>\n                                            <Field\n                                              name='firstName'\n                                              component='input'\n                                              placeholder='First Name'\n                                              validate={required}>\n                                              {({\n                                                input,\n                                                meta,\n                                                placeholder,\n                                              }) => (\n                                                <div className='col-span-6 sm:col-span-3'>\n                                                  <div>\n                                                    <label\n                                                      htmlFor='first-name'\n                                                      className='block font-medium text-gray-700 text-md'>\n                                                      First Name\n                                                    </label>\n                                                    <input\n                                                      type='text'\n                                                      {...input}\n                                                      placeholder={placeholder}\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                                                    />\n                                                  </div>\n                                                  {meta.error && meta.touched && (\n                                                    <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                                      <div className='flex'>\n                                                        <div className='flex-shrink-0'>\n                                                          <XCircleIcon\n                                                            className='w-5 h-5 text-red-400'\n                                                            aria-hidden='true'\n                                                          />\n                                                        </div>\n                                                        <div className='ml-3'>\n                                                          <h3 className='text-sm font-medium text-red-800'>\n                                                            {meta.error}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  )}\n                                                </div>\n                                              )}\n                                            </Field>\n                                          </div>\n                                          <div className='col-span-6 sm:col-span-3'>\n                                            <Field\n                                              name='lastName'\n                                              component='input'\n                                              placeholder='Last Name'\n                                              validate={required}>\n                                              {({\n                                                input,\n                                                meta,\n                                                placeholder,\n                                              }) => (\n                                                <div className='col-span-1 sm:col-span-3'>\n                                                  <div>\n                                                    <label\n                                                      htmlFor='first-name'\n                                                      className='block font-medium text-gray-700 text-md'>\n                                                      Last Name\n                                                    </label>\n                                                    <input\n                                                      type='text'\n                                                      {...input}\n                                                      placeholder={placeholder}\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                                                    />\n                                                  </div>\n                                                  {meta.error && meta.touched && (\n                                                    <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                                      <div className='flex'>\n                                                        <div className='flex-shrink-0'>\n                                                          <XCircleIcon\n                                                            className='w-5 h-5 text-red-400'\n                                                            aria-hidden='true'\n                                                          />\n                                                        </div>\n                                                        <div className='ml-3'>\n                                                          <h3 className='text-sm font-medium text-red-800'>\n                                                            {meta.error}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  )}\n                                                </div>\n                                              )}\n                                            </Field>\n                                          </div>\n                                          <div className='col-span-6 sm:col-span-4'>\n                                            <Field\n                                              name='email'\n                                              component='input'\n                                              placeholder='E-mail Address'\n                                              validate={required}>\n                                              {({\n                                                input,\n                                                meta,\n                                                placeholder,\n                                              }) => (\n                                                <div className='col-span-6 sm:col-span-3'>\n                                                  <div>\n                                                    <label\n                                                      htmlFor='first-name'\n                                                      className='block font-medium text-gray-700 text-md'>\n                                                      E-mail Address\n                                                    </label>\n                                                    <input\n                                                      type='text'\n                                                      {...input}\n                                                      placeholder={placeholder}\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                                                    />\n                                                  </div>\n                                                  {meta.error && meta.touched && (\n                                                    <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                                      <div className='flex'>\n                                                        <div className='flex-shrink-0'>\n                                                          <XCircleIcon\n                                                            className='w-5 h-5 text-red-400'\n                                                            aria-hidden='true'\n                                                          />\n                                                        </div>\n                                                        <div className='ml-3'>\n                                                          <h3 className='text-sm font-medium text-red-800'>\n                                                            {meta.error}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  )}\n                                                </div>\n                                              )}\n                                            </Field>\n                                          </div>\n                                          <div className='col-span-6 sm:col-span-3'>\n                                            <label\n                                              htmlFor='country'\n                                              className='block text-sm font-medium text-gray-700'>\n                                              Country / Region\n                                            </label>\n                                            <select\n                                              id='country'\n                                              name='country'\n                                              autoComplete='country'\n                                              className='block w-full px-3 py-2 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'>\n                                              <option>United States</option>\n                                              <option>Canada</option>\n                                              <option>Mexico</option>\n                                            </select>\n                                          </div>\n                                          <div className='col-span-6'>\n                                            <Field\n                                              name='street'\n                                              component='input'\n                                              placeholder='Street Address'\n                                              validate={required}>\n                                              {({\n                                                input,\n                                                meta,\n                                                placeholder,\n                                              }) => (\n                                                <div className='col-span-6 sm:col-span-3'>\n                                                  <div>\n                                                    <label\n                                                      htmlFor='first-name'\n                                                      className='block font-medium text-gray-700 text-md'>\n                                                      Street Address\n                                                    </label>\n                                                    <input\n                                                      type='text'\n                                                      {...input}\n                                                      placeholder={placeholder}\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                                                    />\n                                                  </div>\n                                                  {meta.error && meta.touched && (\n                                                    <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                                      <div className='flex'>\n                                                        <div className='flex-shrink-0'>\n                                                          <XCircleIcon\n                                                            className='w-5 h-5 text-red-400'\n                                                            aria-hidden='true'\n                                                          />\n                                                        </div>\n                                                        <div className='ml-3'>\n                                                          <h3 className='text-sm font-medium text-red-800'>\n                                                            {meta.error}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  )}\n                                                </div>\n                                              )}\n                                            </Field>\n                                          </div>\n                                          <div className='col-span-6 sm:col-span-6 lg:col-span-2'>\n                                            <Field\n                                              name='city'\n                                              component='input'\n                                              placeholder='City'\n                                              validate={required}>\n                                              {({\n                                                input,\n                                                meta,\n                                                placeholder,\n                                              }) => (\n                                                <div className='col-span-6 sm:col-span-3'>\n                                                  <div>\n                                                    <label\n                                                      htmlFor='first-name'\n                                                      className='block font-medium text-gray-700 text-md'>\n                                                      City\n                                                    </label>\n                                                    <input\n                                                      type='text'\n                                                      {...input}\n                                                      placeholder={placeholder}\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                                                    />\n                                                  </div>\n                                                  {meta.error && meta.touched && (\n                                                    <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                                      <div className='flex'>\n                                                        <div className='flex-shrink-0'>\n                                                          <XCircleIcon\n                                                            className='w-5 h-5 text-red-400'\n                                                            aria-hidden='true'\n                                                          />\n                                                        </div>\n                                                        <div className='ml-3'>\n                                                          <h3 className='text-sm font-medium text-red-800'>\n                                                            {meta.error}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  )}\n                                                </div>\n                                              )}\n                                            </Field>\n                                          </div>\n                                          <div className='col-span-6 sm:col-span-3 lg:col-span-2'>\n                                            <Field\n                                              name='state'\n                                              component='input'\n                                              placeholder='State/Province'\n                                              validate={required}>\n                                              {({\n                                                input,\n                                                meta,\n                                                placeholder,\n                                              }) => (\n                                                <div className='col-span-6 sm:col-span-3'>\n                                                  <div>\n                                                    <label\n                                                      htmlFor='first-name'\n                                                      className='block font-medium text-gray-700 text-md'>\n                                                      State/Province\n                                                    </label>\n                                                    <input\n                                                      type='text'\n                                                      {...input}\n                                                      placeholder={placeholder}\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                                                    />\n                                                  </div>\n                                                  {meta.error && meta.touched && (\n                                                    <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                                      <div className='flex'>\n                                                        <div className='flex-shrink-0'>\n                                                          <XCircleIcon\n                                                            className='w-5 h-5 text-red-400'\n                                                            aria-hidden='true'\n                                                          />\n                                                        </div>\n                                                        <div className='ml-3'>\n                                                          <h3 className='text-sm font-medium text-red-800'>\n                                                            {meta.error}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  )}\n                                                </div>\n                                              )}\n                                            </Field>\n                                          </div>\n                                          <div className='col-span-6 sm:col-span-3 lg:col-span-2'>\n                                            <Field\n                                              name='zip'\n                                              component='input'\n                                              placeholder='ZIP / Postal'\n                                              validate={required}>\n                                              {({\n                                                input,\n                                                meta,\n                                                placeholder,\n                                              }) => (\n                                                <div className='col-span-6 sm:col-span-3'>\n                                                  <div>\n                                                    <label\n                                                      htmlFor='first-name'\n                                                      className='block font-medium text-gray-700 text-md'>\n                                                      ZIP/Postal\n                                                    </label>\n                                                    <input\n                                                      type='text'\n                                                      {...input}\n                                                      placeholder={placeholder}\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                                                    />\n                                                  </div>\n                                                  {meta.error && meta.touched && (\n                                                    <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                                      <div className='flex'>\n                                                        <div className='flex-shrink-0'>\n                                                          <XCircleIcon\n                                                            className='w-5 h-5 text-red-400'\n                                                            aria-hidden='true'\n                                                          />\n                                                        </div>\n                                                        <div className='ml-3'>\n                                                          <h3 className='text-sm font-medium text-red-800'>\n                                                            {meta.error}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  )}\n                                                </div>\n                                              )}\n                                            </Field>\n                                          </div>\n\n                                          <div className='col-span-6 sm:col-span-4'>\n                                            <Field\n                                              name='phone'\n                                              component='input'\n                                              placeholder='Enter Phone Number'\n                                              validate={required}>\n                                              {({\n                                                input,\n                                                meta,\n                                                placeholder,\n                                              }) => (\n                                                <div className='col-span-6 sm:col-span-3'>\n                                                  <div>\n                                                    <label\n                                                      htmlFor='first-name'\n                                                      className='block font-medium text-gray-700 text-md'>\n                                                      Phone Number\n                                                    </label>\n                                                    <PhoneInput\n                                                      type='text'\n                                                      defaultCountry='US'\n                                                      {...input}\n                                                      placeholder={placeholder}\n                                                      value={value}\n                                                      onChange={setValue}\n                                                    />\n                                                  </div>\n                                                </div>\n                                              )}\n                                            </Field>\n                                          </div>\n\n                                          {/* //DATEPICKER */}\n\n                                          <div className='col-span-6 sm:col-span-4'>\n                                            <Field\n                                              name='birtday'\n                                              component='input'\n                                              placeholder=''\n                                              validate={required}>\n                                              {({\n                                                input,\n                                                meta,\n                                                placeholder,\n                                              }) => (\n                                                <div className='col-span-6 sm:col-span-3'>\n                                                  <label\n                                                    htmlFor='country'\n                                                    className='block text-sm font-medium text-gray-700'>\n                                                    Birthday\n                                                  </label>\n                                                  <div className='col-span-6'>\n                                                    <DatePicker\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                                                      onChange={onChange}\n                                                      value={dateValue}\n                                                    />\n                                                  </div>\n                                                </div>\n                                              )}\n                                            </Field>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <hr />\n                              <div className='flex justify-end pt-5'>\n                                <button\n                                  type='button'\n                                  className='px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                                  Cancel\n                                </button>\n                                <button\n                                  type='submit'\n                                  className='inline-flex justify-center px-4 py-2 ml-3 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                                  Save\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </form>\n                      )}\n                    />\n                  </div>\n                </div>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition.Root>\n    </Fragment>\n  );\n};\n\nexport default AddAddressModal;\n","/** @format */\n\nimport React from \"react\";\nimport { Fragment, useRef, useState } from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { ExclamationIcon } from \"@heroicons/react/outline\";\nimport { Navigate } from \"react-router-dom\";\n\nexport default function Modal(props) {\n  const [open, setOpen] = useState(true);\n\n  const cancelButtonRef = useRef(null);\n\n  if (!open) {\n    return <Navigate t to='/' />;\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as='div'\n        static\n        className='fixed inset-0 z-10 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        open={open}\n        onClose={setOpen}>\n        <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'>\n            <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-80 ' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className='hidden sm:inline-block sm:align-middle sm:h-screen'\n            aria-hidden='true'>\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\n            <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6'>\n              <div className='sm:flex sm:items-start'>\n                <div className='flex items-center justify-center flex-shrink-0 w-12 h-12 mx-auto bg-red-100 rounded-full sm:mx-0 sm:h-10 sm:w-10'>\n                  <ExclamationIcon\n                    className='w-6 h-6 text-red-600'\n                    aria-hidden='true'\n                  />\n                </div>\n                <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\n                  <Dialog.Title\n                    as='h3'\n                    className='text-lg font-medium leading-6 text-gray-900'>\n                    {props.title}\n                  </Dialog.Title>\n                  <div className='mt-2'>\n                    <p className='text-sm text-gray-500'>{props.content}</p>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-4 sm:flex sm:flex-row-reverse'>\n                {props.actions}\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n}\n","/** @format */\nimport React from \"react\";\nimport { useRef, useState, useEffect } from \"react\";\n\n//REDUX\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate, Link, useParams, useNavigate } from \"react-router-dom\";\nimport { deletePassword } from \"../../actions/passwordActions\";\nimport { PASSWORD_DELETE_RESET } from \"../../constants/passwordConstants\";\n\nimport StandardModal from \"./StandardModal\";\n\nconst DeletePasswordModal = ({ history }) => {\n  const dispatch = useDispatch();\n  const passwordId = useParams();\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(true);\n  const cancelButtonRef = useRef(null);\n\n  const passwordDelete = useSelector((state) => state.passwordDelete);\n  const {\n    // loading: loadingDelete,\n    // error: errorDelete,\n    success: successDelete,\n  } = passwordDelete;\n  const passwordDetails = useSelector((state) => state.passwordDetails);\n  const { password } = passwordDetails;\n\n  useEffect(() => {\n    if (successDelete) {\n      dispatch({ type: PASSWORD_DELETE_RESET });\n      navigate(\"/\");\n    }\n  }, [dispatch, history, navigate, passwordId, password, successDelete]);\n\n  if (!open) {\n    return <Navigate to='/' />;\n  }\n\n  const deleteHandler = (id) => {\n    dispatch(deletePassword(id));\n  };\n\n  const actions = (\n    <React.Fragment>\n      <button\n        type='button'\n        className='inline-flex justify-center w-full px-4 py-2 text-base font-medium text-white bg-red-600 border border-transparent rounded-md shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm'\n        onClick={() => deleteHandler(passwordId.id)}>\n        Delete\n      </button>\n      <Link\n        to='/passwords'\n        type='button'\n        className='inline-flex justify-center w-full px-4 py-2 mt-3 text-base font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:w-auto sm:text-sm'\n        onClick={() => setOpen(false)}\n        ref={cancelButtonRef}>\n        Cancel\n      </Link>\n    </React.Fragment>\n  );\n\n  return (\n    <div>\n      <StandardModal\n        title='Delete Password'\n        content='Are you sure you want to delete this password?'\n        actions={actions}\n      />\n    </div>\n  );\n};\n\nexport default DeletePasswordModal;\n","/** @format */\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nimport history from \"./history\";\n\nimport DashboardScreen from \"./components/screens/DashboardScreen\";\nimport PasswordsScreen from \"./components/screens/PasswordScreen\";\nimport NotesScreen from \"./components/screens/NoteScreen\";\nimport AddressScreen from \"./components/screens/AddressScreen\";\n\nimport AddPasswordModal from \"./components/modal/AddPasswordModal\";\nimport AddNoteModal from \"./components/modal/AddNoteModal\";\nimport EditPasswordModal from \"./components/modal/EditPasswordModal\";\nimport AddAddressModal from \"./components/modal/AddAddressModal\";\n\nimport DeletePasswordModal from \"./components/modal/DeletePasswordModal\";\n\n//Toastify\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router history={history}>\n        <ToastContainer className='w-4 h-4' autoClose={3500} />\n        <Routes>\n          {/* <Route path='/'>\n          <Navigate to='/dashboard' />\n        </Route> */}\n          <Route path='/' element={<DashboardScreen />} />\n          <Route path='/dashboard' element={<DashboardScreen />} />\n          <Route path='/passwords' element={<PasswordsScreen />} />\n          <Route path='/passwords/add' element={<AddPasswordModal />} />\n          <Route\n            path='/password/:id/delete'\n            element={<DeletePasswordModal />}\n          />\n          <Route path='/password/:id/edit' element={<EditPasswordModal />} />\n          <Route path='/add/note' element={<AddNoteModal />} />\n          <Route path='/add/address' element={<AddAddressModal />} />\n          <Route path='/notes' element={<NotesScreen />} />\n          <Route path='/addresses' element={<AddressScreen />} />\n        </Routes>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/** @format */\n\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  passwordListReducer,\n  passwordCreateReducer,\n  passwordDetailsReducer,\n  passwordDeleteReducer,\n  passwordUpdateReducer,\n} from \"./reducers/passwordReducers\";\n\nconst reducer = combineReducers({\n  passwordList: passwordListReducer,\n  passwordCreate: passwordCreateReducer,\n  passwordDetails: passwordDetailsReducer,\n  passwordDelete: passwordDeleteReducer,\n  passwordUpdate: passwordUpdateReducer,\n});\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","/** @format */\nimport {\n  PASSWORD_LIST_REQUEST,\n  PASSWORD_LIST_SUCCESS,\n  PASSWORD_LIST_FAIL,\n  PASSWORD_DELETE_REQUEST,\n  PASSWORD_DELETE_SUCCESS,\n  PASSWORD_DELETE_FAIL,\n  PASSWORD_DELETE_RESET,\n  PASSWORD_CREATE_REQUEST,\n  PASSWORD_CREATE_SUCCESS,\n  PASSWORD_CREATE_FAIL,\n  PASSWORD_CREATE_RESET,\n  PASSWORD_DETAILS_REQUEST,\n  PASSWORD_DETAILS_SUCCESS,\n  PASSWORD_DETAILS_FAIL,\n  PASSWORD_UPDATE_REQUEST,\n  PASSWORD_UPDATE_SUCCESS,\n  PASSWORD_UPDATE_FAIL,\n  PASSWORD_UPDATE_RESET,\n} from \"../constants/passwordConstants\";\n\n//PASSWORDS\n\nexport const passwordListReducer = (state = { passwords: [] }, action) => {\n  switch (action.type) {\n    case PASSWORD_LIST_REQUEST:\n      return {\n        loading: true,\n        passwords: [],\n      };\n    case PASSWORD_LIST_SUCCESS:\n      return { passwords: action.payload, loading: false };\n    case PASSWORD_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const passwordDetailsReducer = (state = { password: {} }, action) => {\n  switch (action.type) {\n    case PASSWORD_DETAILS_REQUEST:\n      return { loading: true, ...state };\n    case PASSWORD_DETAILS_SUCCESS:\n      return { loading: false, password: action.payload };\n    case PASSWORD_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const passwordDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PASSWORD_DELETE_REQUEST:\n      return { loading: true };\n    case PASSWORD_DELETE_SUCCESS:\n      return { loading: false, success: true, state: {} };\n    case PASSWORD_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    case PASSWORD_DELETE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const passwordCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PASSWORD_CREATE_REQUEST:\n      return { loading: true };\n    case PASSWORD_CREATE_SUCCESS:\n      return { loading: false, success: true, state: {} };\n    case PASSWORD_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PASSWORD_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const passwordUpdateReducer = (state = { password: {} }, action) => {\n  switch (action.type) {\n    case PASSWORD_UPDATE_REQUEST:\n      return { loading: true };\n    case PASSWORD_UPDATE_SUCCESS:\n      return { loading: false, success: true, password: action.payload };\n    case PASSWORD_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PASSWORD_UPDATE_RESET:\n      return { password: {} };\n    default:\n      return state;\n  }\n};\n\n//NOTES\n\n// export const passwordListReducer = (state = { passwords: [] }, action) => {\n//   switch (action.type) {\n//     case PASSWORD_LIST_REQUEST:\n//       return {\n//         loading: true,\n//         passwords: [],\n//       };\n//     case PASSWORD_LIST_SUCCESS:\n//       return { passwords: action.payload, loading: false };\n//     case PASSWORD_LIST_FAIL:\n//       return { loading: false, error: action.payload };\n//     default:\n//       return state;\n//   }\n// };\n\n// export const passwordDeleteReducer = (state = { passwords: [] }, action) => {\n//   switch (action.type) {\n//     case PASSWORD_DELETE_REQUEST:\n//       return {\n//         passwords: [\n//           ...state.passwords.filter((password) => password !== action.payload),\n//         ],\n//         loading: true,\n//       };\n//     case PASSWORD_DELETE_SUCCESS:\n//       return { loading: false, success: true };\n//     case PASSWORD_DELETE_FAIL:\n//       return { loading: false, error: action.payload };\n//     default:\n//       return state;\n//   }\n// };\n\n// export const passwordCreateReducer = (state = {}, action) => {\n//   switch (action.type) {\n//     case PASSWORD_CREATE_REQUEST:\n//       return { loading: true };\n//     case PASSWORD_CREATE_SUCCESS:\n//       return { loading: false, success: true, state: {} };\n//     case PASSWORD_CREATE_FAIL:\n//       return { loading: false, error: action.payload };\n//     case PASSWORD_CREATE_RESET:\n//       return {};\n//     default:\n//       return state;\n//   }\n// };\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\n//REDUX\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}