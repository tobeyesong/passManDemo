{"version":3,"sources":["components/navbar/Sidebar.js","components/Button.js","components/navbar/SearchBar.js","components/loader/Loader.js","constants/passwordConstants.js","components/emptyState/passwordState.js","components/content/PasswordContent.js","actions/passwordActions.js","constants/noteConstants.js","components/emptyState/noteState.js","components/content/NoteContent.js","actions/noteActions.js","components/screens/DashboardScreen.js","components/screens/PasswordScreen.js","components/screens/NoteScreen.js","components/content/AddressContent.js","components/screens/AddressScreen.js","components/modal/AddPasswordModal.js","components/modal/EditPasswordModal.js","components/modal/StandardModal.js","components/modal/DeletePasswordModal.js","components/modal/AddNoteModal.js","components/modal/DeleteNoteModal.js","components/modal/EditNoteModal.js","components/misc/Title.js","components/screens/SearchScreen.js","App.js","store.js","reducers/passwordReducers.js","reducers/noteReducers.js","index.js"],"names":["navigation","name","href","icon","HomeIcon","FingerPrintIcon","PaperClipIcon","Sidebar","className","src","alt","map","item","to","isActive","solutions","link","classNames","classes","filter","Boolean","join","Button","open","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","type","userNavigation","SearchBar","useState","sidebarOpen","setSidebarOpen","Root","show","onClose","Child","Overlay","onClick","current","action","method","htmlFor","id","placeholder","Items","Item","active","Loader","PASSWORD_LIST_REQUEST","PASSWORD_LIST_SUCCESS","PASSWORD_LIST_FAIL","PASSWORD_CREATE_REQUEST","PASSWORD_CREATE_SUCCESS","PASSWORD_CREATE_FAIL","PASSWORD_CREATE_RESET","PASSWORD_DELETE_REQUEST","PASSWORD_DELETE_SUCCESS","PASSWORD_DELETE_FAIL","PASSWORD_DELETE_RESET","PASSWORD_UPDATE_REQUEST","PASSWORD_UPDATE_SUCCESS","PASSWORD_UPDATE_FAIL","PASSWORD_UPDATE_RESET","PASSWORD_DETAILS_REQUEST","PASSWORD_DETAILS_SUCCESS","PASSWORD_DETAILS_FAIL","passwordState","fill","viewBox","stroke","vectorEffect","strokeLinecap","strokeLinejoin","strokeWidth","d","PasswordContent","props","dispatch","useDispatch","passwordList","useSelector","state","loading","error","passwords","useEffect","a","axios","get","data","payload","response","message","autoClose","title","length","password","url","onError","e","target","onerror","username","_id","NOTE_LIST_REQUEST","NOTE_LIST_SUCCESS","NOTE_LIST_FAIL","NOTE_CREATE_REQUEST","NOTE_CREATE_SUCCESS","NOTE_CREATE_FAIL","NOTE_CREATE_RESET","NOTE_DELETE_REQUEST","NOTE_DELETE_SUCCESS","NOTE_DELETE_FAIL","NOTE_DELETE_RESET","NOTE_UPDATE_REQUEST","NOTE_UPDATE_SUCCESS","NOTE_UPDATE_FAIL","NOTE_UPDATE_RESET","NOTE_DETAILS_REQUEST","NOTE_DETAILS_SUCCESS","NOTE_DETAILS_FAIL","noteState","noteList","notes","note","caption","DashboardScreen","NoteContent","AddressContent","required","value","undefined","AddPasswordModal","passwordId","useParams","navigate","useNavigate","setOpen","cancelButtonRef","useRef","passwordCreate","successCreate","success","createdPassword","passwordDetails","passwordShown","setPasswordShown","togglePassword","static","initialFocus","onSubmit","values","formData","post","toast","render","handleSubmit","submitError","component","validate","input","meta","touched","EditPasswordModal","passwordUpdate","sitePassword","put","info","updatePassword","initialValues","Modal","Title","content","actions","t","DeletePasswordModal","history","successDelete","passwordDelete","deleteHandler","delete","deletePassword","ref","AddNoteModal","noteId","noteCreate","successNoteCreate","createdNote","noteDetails","DeleteNoteModal","noteDelete","deleteNote","EditNoteModal","noteUpdate","image","updateNote","searchClient","algoliasearch","passwordIndex","initIndex","noteIndex","allPasswords","hit","objectID","allNotes","SearchScreen","setPasswords","setNotes","fetchPasswords","forEach","saveObjects","fetchNotes","InstantSearch","indexName","SearchBox","autoFocus","translations","Index","Hits","hitComponent","App","path","element","AddressScreen","React","Component","reducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cc395220.chunk.js","sourcesContent":["/** @format */\n\nimport React from \"react\";\nimport {\n  HomeIcon,\n  // MapIcon,\n  FingerPrintIcon,\n  PaperClipIcon,\n} from \"@heroicons/react/outline\";\nimport { NavLink } from \"react-router-dom\";\n\nconst navigation = [\n  { name: \"Dashboard\", href: \"/dashboard\", icon: HomeIcon },\n  {\n    name: \"Passwords\",\n    href: \"/passwords\",\n    icon: FingerPrintIcon,\n  },\n  { name: \"Notes\", href: \"/notes\", icon: PaperClipIcon },\n  // { name: \"Addresses\", href: \"/addresses\", icon: MapIcon },\n];\n\nconst Sidebar = () => {\n  return (\n    <div className='flex h-screen overflow-hidden bg-gray-100'>\n      {/* Static sidebar for desktop */}\n      <div className='hidden md:flex md:flex-shrink-0'>\n        <div className='flex flex-col w-64'>\n          {/* Sidebar component, swap this element with another sidebar if you like */}\n          <div className='flex flex-col flex-grow pt-5 pb-4 overflow-y-auto bg-white border-r border-gray-200'>\n            <div className='flex items-center flex-shrink-0 px-4'>\n              <img\n                className='w-auto h-10 transition-all hover:animate-spin'\n                src='https://media.publit.io/file/noun_vault_3097826-2.svg'\n                alt='PassMan'\n              />\n              <span className='text-2xl text-gray-500 uppercase '>PassMan</span>\n            </div>\n            <div className='flex flex-col flex-grow mt-5'>\n              <nav className='flex-1 px-2 space-y-1 bg-white'>\n                {navigation.map((item) => (\n                  <NavLink\n                    key={item.name}\n                    to={item.href}\n                    className={({ isActive }) =>\n                      isActive\n                        ? \"bg-yellow-400 flex items-center px-2 py-2 text-sm font-medium text-gray-600 rounded-md group hover:bg-yellow-100 hover:text-gray-900\"\n                        : \"flex items-center px-2 py-2 text-sm font-medium text-gray-600 rounded-md group hover:bg-yellow-100 hover:text-gray-900\"\n                    }>\n                    <item.icon\n                      className='flex-shrink-0 w-6 h-6 mr-3'\n                      aria-hidden='true'\n                    />\n                    {item.name}\n                  </NavLink>\n                ))}\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { PlusSmIcon as PlusSmIconOutline } from \"@heroicons/react/outline\";\n\nimport { Popover, Transition } from \"@headlessui/react\";\n\nimport {\n  // MapIcon,\n  FingerPrintIcon,\n  PaperClipIcon,\n} from \"@heroicons/react/outline\";\n\nconst solutions = [\n  {\n    name: \"Add Password\",\n    link: \"/passwords/add\",\n    icon: FingerPrintIcon,\n  },\n  {\n    name: \"Add Notes\",\n    link: \"/add/note\",\n    icon: PaperClipIcon,\n  },\n  // {\n  //   name: \"Add Addresses\",\n  //   link: \"/add/address\",\n  //   icon: MapIcon,\n  // },\n];\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nconst Button = () => {\n  return (\n    <Popover className='realtive '>\n      {({ open }) => (\n        <>\n          <Popover.Button\n            className={classNames(\n              open ? \"text-gray-900\" : \"text-gray-500\",\n              \"group p-3 m-4 mb-20 mr-4 z-40 bg-yellow-500 absolute bottom-0 right-0  rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none \"\n            )}>\n            <PlusSmIconOutline\n              className='w-8 h-8 text-white'\n              aria-hidden='true'\n            />\n          </Popover.Button>\n\n          <Transition\n            as={Fragment}\n            enter='transition ease-out duration-200'\n            enterFrom='opacity-0 translate-y-1'\n            enterTo='opacity-100 translate-y-0'\n            leave='transition ease-in duration-150'\n            leaveFrom='opacity-100 translate-y-0'\n            leaveTo='opacity-0 translate-y-1'>\n            <Popover.Panel className='absolute bottom-0 right-0 z-40 pb-4 pr-4 '>\n              <div className='overflow-hidden rounded-lg shadow-lg'>\n                <div className='relative grid gap-6 px-5 py-6 bg-white sm:gap-8 sm:p-8 '>\n                  {solutions.map((item) => (\n                    <Link\n                      key={item.name}\n                      to={item.link}\n                      type='button'\n                      className='flex items-start p-2 -m-3 transition duration-150 ease-in-out rounded-lg hover:bg-orange-300'>\n                      <item.icon\n                        className='flex-shrink-0 w-6 h-6 text-blue-600'\n                        aria-hidden='true'\n                      />\n                      <div className='ml-4'>\n                        <p className='text-base font-medium text-gray-900'>\n                          {item.name}\n                        </p>\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            </Popover.Panel>\n          </Transition>\n        </>\n      )}\n    </Popover>\n  );\n};\n\nexport default Button;\n","/** @format */\n\nimport React from \"react\";\nimport { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  HomeIcon,\n  MenuAlt2Icon,\n  XIcon,\n  // MapIcon,\n  FingerPrintIcon,\n  PaperClipIcon,\n} from \"@heroicons/react/outline\";\nimport { Dialog, Menu, Transition } from \"@headlessui/react\";\nimport { SearchIcon } from \"@heroicons/react/solid\";\nimport Button from \"../Button\";\n\nconst userNavigation = [\n  { name: \"Settings\", href: \"#\" },\n  { name: \"Sign out\", href: \"#\" },\n];\n\nconst navigation = [\n  { name: \"Dashboard\", href: \"/dashboard\", icon: HomeIcon },\n  {\n    name: \"Passwords\",\n    href: \"/passwords\",\n    icon: FingerPrintIcon,\n  },\n  { name: \"Notes\", href: \"/notes\", icon: PaperClipIcon },\n  // { name: \"Addresses\", href: \"/addresses\", icon: MapIcon },\n];\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nconst SearchBar = () => {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  return (\n    <div className=''>\n      <Transition.Root show={sidebarOpen} as={Fragment}>\n        <Dialog\n          as='div'\n          className='fixed inset-0 z-40 flex md:hidden'\n          onClose={setSidebarOpen}>\n          <Transition.Child\n            as={Fragment}\n            enter='transition-opacity ease-linear duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='transition-opacity ease-linear duration-300'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'>\n            <Dialog.Overlay className='fixed inset-0 bg-gray-600 bg-opacity-75' />\n          </Transition.Child>\n          <Transition.Child\n            as={Fragment}\n            enter='transition ease-in-out duration-300 transform'\n            enterFrom='-translate-x-full'\n            enterTo='translate-x-0'\n            leave='transition ease-in-out duration-300 transform'\n            leaveFrom='translate-x-0'\n            leaveTo='-translate-x-full'>\n            <div className='relative flex flex-col flex-1 w-full max-w-xs pt-5 pb-4 bg-white'>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-in-out duration-300'\n                enterFrom='opacity-0'\n                enterTo='opacity-100'\n                leave='ease-in-out duration-300'\n                leaveFrom='opacity-100'\n                leaveTo='opacity-0'>\n                <div className='absolute top-0 right-0 pt-2 -mr-12'>\n                  <button\n                    type='button'\n                    className='flex items-center justify-center w-10 h-10 ml-1 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white'\n                    onClick={() => setSidebarOpen(false)}>\n                    <span className='sr-only'>Close sidebar</span>\n                    <XIcon className='w-6 h-6 text-white' aria-hidden='true' />\n                  </button>\n                </div>\n              </Transition.Child>\n              <div className='flex items-center flex-shrink-0 px-4'>\n                <img\n                  className='w-auto h-10 transition-all hover:animate-spin'\n                  src='https://media.publit.io/file/noun_vault_3097826-2.svg'\n                  alt='PassMan'\n                />\n                <span className='text-2xl text-gray-500 uppercase '>\n                  PassMan\n                </span>\n              </div>\n              <div className='flex-1 h-0 mt-5 overflow-y-auto'>\n                <nav className='px-2 space-y-1'>\n                  {navigation.map((item) => (\n                    <a\n                      key={item.name}\n                      href={item.href}\n                      className={classNames(\n                        item.current\n                          ? \"bg-gray-100 text-gray-900\"\n                          : \"text-gray-600 hover:bg-gray-50 hover:text-gray-900\",\n                        \"group flex items-center px-2 py-2 text-base font-medium rounded-md\"\n                      )}>\n                      <item.icon\n                        className={classNames(\n                          item.current\n                            ? \"text-gray-500\"\n                            : \"text-gray-400 group-hover:text-gray-500\",\n                          \"mr-4 flex-shrink-0 h-6 w-6\"\n                        )}\n                        aria-hidden='true'\n                      />\n                      {item.name}\n                    </a>\n                  ))}\n                </nav>\n              </div>\n            </div>\n          </Transition.Child>\n          <div className='flex-shrink-0 w-14' aria-hidden='true'>\n            {/* Dummy element to force sidebar to shrink to fit close icon */}\n          </div>\n        </Dialog>\n      </Transition.Root>\n      <div className='relative z-10 flex flex-shrink-0 h-16 bg-white shadow'>\n        <button\n          type='button'\n          className='px-4 text-gray-500 border-r border-gray-200 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500 md:hidden'\n          onClick={() => setSidebarOpen(true)}>\n          <span className='sr-only'>Open sidebar</span>\n          <MenuAlt2Icon className='w-6 h-6' aria-hidden='true' />\n        </button>\n        <div className='flex justify-between flex-1 px-4'>\n          <div className='flex items-center flex-1'>\n            <Link to='/search' className='w-full cursor-text'>\n              <form className='flex w-full md:ml-0' action='#' method='GET'>\n                <label htmlFor='search-field' className='sr-only'>\n                  Search\n                </label>\n                <div className='relative w-full text-gray-400 focus-within:text-gray-600'>\n                  <div className='absolute inset-y-0 left-0 flex items-center pointer-events-none'>\n                    <SearchIcon className='w-5 h-5' aria-hidden='true' />\n                  </div>\n                  <input\n                    id='search-field'\n                    className='block py-2 pl-8 pr-3 text-gray-900 placeholder-gray-500 border-transparent focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm'\n                    placeholder='Search'\n                    type='search'\n                    name='search'\n                  />\n                </div>\n              </form>\n            </Link>\n          </div>\n          <div className='flex items-center ml-4 md:ml-6'>\n            {/* Profile dropdown */}\n            <Menu as='div' className='relative ml-3'>\n              <div>\n                <Menu.Button className='flex items-center max-w-xs text-sm bg-white rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                  <span className='sr-only'>Open user menu</span>\n                  <img\n                    className='w-8 h-8 rounded-full'\n                    src='https://images.unsplash.com/photo-1598013924228-f336656b163c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1746&q=80&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'\n                    alt=''\n                  />\n                </Menu.Button>\n              </div>\n              <Transition\n                as={Fragment}\n                enter='transition ease-out duration-100'\n                enterFrom='transform opacity-0 scale-95'\n                enterTo='transform opacity-100 scale-100'\n                leave='transition ease-in duration-75'\n                leaveFrom='transform opacity-100 scale-100'\n                leaveTo='transform opacity-0 scale-95'>\n                <Menu.Items className='absolute right-0 w-48 py-1 mt-2 origin-top-right bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none'>\n                  {userNavigation.map((item) => (\n                    <Menu.Item key={item.name}>\n                      {({ active }) => (\n                        <a\n                          href={item.href}\n                          className={classNames(\n                            active ? \"bg-gray-100\" : \"\",\n                            \"block px-4 py-2 text-sm text-gray-700\"\n                          )}>\n                          {item.name}\n                        </a>\n                      )}\n                    </Menu.Item>\n                  ))}\n                </Menu.Items>\n              </Transition>\n            </Menu>\n          </div>\n        </div>\n      </div>\n      <Button />\n    </div>\n  );\n};\n\nexport default SearchBar;\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { CollectionIcon } from \"@heroicons/react/outline\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='flex justify-center '>\r\n      <CollectionIcon className='w-10 h-10 animate-pulse' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","/** @format */\n//PASSWORDS\n\nexport const PASSWORD_LIST_REQUEST = \"PASSWORD_LIST_REQUEST\";\nexport const PASSWORD_LIST_SUCCESS = \"PASSWORD_LIST_SUCCESS\";\nexport const PASSWORD_LIST_FAIL = \"PASSWORD_LIST_FAIL\";\n\nexport const PASSWORD_CREATE_REQUEST = \"PASSWORD_CREATE_REQUEST\";\nexport const PASSWORD_CREATE_SUCCESS = \"PASSWORD_CREATE_SUCCESS\";\nexport const PASSWORD_CREATE_FAIL = \"PASSWORD_CREATE_FAIL\";\nexport const PASSWORD_CREATE_RESET = \"PASSWORD_CREATE_RESET\";\n\nexport const PASSWORD_DELETE_REQUEST = \"PASSWORD_DELETE_REQUEST\";\nexport const PASSWORD_DELETE_SUCCESS = \"PASSWORD_DELETE_SUCCESS\";\nexport const PASSWORD_DELETE_FAIL = \"PASSWORD_DELETE_FAIL\";\nexport const PASSWORD_DELETE_RESET = \"PASSWORD_DELETE_RESET\";\n\nexport const PASSWORD_UPDATE_REQUEST = \"PASSWORD_UPDATE_REQUEST\";\nexport const PASSWORD_UPDATE_SUCCESS = \"PASSWORD_UPDATE_SUCCESS\";\nexport const PASSWORD_UPDATE_FAIL = \"PASSWORD_UPDATE_FAIL\";\nexport const PASSWORD_UPDATE_RESET = \"PASSWORD_UPDATE_RESET\";\n\nexport const PASSWORD_DETAILS_REQUEST = \"PASSWORD_DETAILS_REQUEST\";\nexport const PASSWORD_DETAILS_SUCCESS = \"PASSWORD_DETAILS_SUCCESS\";\nexport const PASSWORD_DETAILS_FAIL = \"PASSWORD_DETAILS_FAIL\";\n","/** @format */\r\n\r\nimport React from \"react\";\r\n\r\nimport { FingerPrintIcon } from \"@heroicons/react/outline\";\r\nconst passwordState = () => {\r\n  return (\r\n    <div className='py-12 border-4 border-gray-200 border-dashed rounded-lg ove rflow-hidden h-96 md:py-20 lg:py-24'>\r\n      <div className='relative px-4 mx-auto max-w-7xl sm:px-6 lg:px-8'>\r\n        <div className='text-center '>\r\n          <svg\r\n            className='w-12 h-12 mx-auto text-gray-400'\r\n            fill='none'\r\n            viewBox='0 0 24 24'\r\n            stroke='currentColor'\r\n            aria-hidden='true'>\r\n            <path\r\n              vectorEffect='non-scaling-stroke'\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n              strokeWidth={2}\r\n              d='M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z'\r\n            />\r\n          </svg>\r\n          <h3 className='mt-2 text-sm font-medium text-gray-900'>\r\n            No passwords\r\n          </h3>\r\n          <p className='mt-1 text-sm text-gray-500'>\r\n            Get started by creating a new Password.\r\n          </p>\r\n          <div className='mt-6'>\r\n            <button\r\n              type='button'\r\n              className='inline-flex items-center px-4 py-2 text-sm font-medium text-white transition-colors ease-in-out delay-75 transform bg-yellow-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n              <FingerPrintIcon\r\n                className='w-5 h-5 mr-2 -ml-1'\r\n                aria-hidden='true'\r\n              />\r\n              New Password\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='relative'>\r\n          <div className='py-2'></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default passwordState;\r\n","/** @format */\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  TrashIcon,\n  PencilIcon,\n  ChevronDoubleUpIcon,\n} from \"@heroicons/react/outline\";\nimport Loader from \"../loader/Loader\";\nimport { listPasswords } from \"../../actions/passwordActions\";\n\nimport PasswordState from \"../emptyState/passwordState\";\n\n//Toastify\nimport { ToastContainer } from \"react-toastify\";\n\nconst PasswordContent = (props) => {\n  const dispatch = useDispatch();\n  const passwordList = useSelector((state) => state.passwordList);\n  const { loading, error, passwords } = passwordList;\n\n  useEffect(() => {\n    dispatch(listPasswords());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <main className='relative flex-1 overflow-y-auto focus:outline-none'>\n        <div className='py-6'>\n          <div className='px-4 mx-auto max-w-7xl sm:px-6 md:px-8'>\n            <div>\n              <ToastContainer autoClose={2000} />\n              <h1 className='text-2xl font-semibold text-gray-900'>\n                {props.title}\n              </h1>\n              <Fragment>\n                {loading ? (\n                  <Loader />\n                ) : error ? (\n                  <h3 className='animate-pulse'>{error}</h3>\n                ) : passwords.length === 0 ? (\n                  <PasswordState />\n                ) : (\n                  <Fragment>\n                    <ul className='grid grid-cols-1 gap-5 mt-3 sm:gap-6 sm:grid-cols-2 lg:grid-cols-4 group'>\n                      {passwords.map((password) => (\n                        <div key={password._id}>\n                          <div className='border-r-4 rounded-md hover:border-yellow-400'>\n                            <li className='flex col-span-1 rounded-md shadow-sm'>\n                              <img\n                                alt='logo '\n                                src={`https://logo.clearbit.com/${password.url}`}\n                                onError={(e) => {\n                                  e.target.onerror = null;\n                                  e.target.src =\n                                    \"https://media.publit.io/file/MiscPasswordIcon.svg\";\n                                }}\n                                className='flex items-center flex-shrink-0 object-contain text-sm font-medium text-white shadow-sm w-14 rounded-l-md'\n                              />\n\n                              <div className='flex flex-row-reverse items-center flex-1 truncate bg-white border-t border-b border-r border-gray-200 rounded-r-md'>\n                                <div className='flex-1 px-4 py-2 text-sm truncate'>\n                                  <a\n                                    href={password.href}\n                                    className='font-medium text-gray-900 hover:text-gray-600'>\n                                    {password.username}\n                                  </a>\n                                  <p className='text-gray-500 '>\n                                    {password.url}\n                                  </p>\n                                </div>\n                                <div className='absolute flex-shrink-0 m-2 transform scale-0 group-hover:scale-100 '>\n                                  <a\n                                    href={`https://${password.url}`}\n                                    className='inline-flex items-center justify-center w-8 h-8 mr-1 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\n                                    <ChevronDoubleUpIcon\n                                      className='w-5 h-5 text-gray-400 rounded hover:bg-blue-700 hover:text-gray-100'\n                                      aria-hidden='true'\n                                    />\n                                  </a>\n                                  <Link\n                                    to={`/password/${password._id}/edit`}\n                                    type='button'\n                                    className='inline-flex items-center justify-center w-8 h-8 mr-1 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\n                                    <PencilIcon\n                                      className='w-5 h-5 text-gray-400 rounded hover:bg-gray-800 hover:text-gray-100'\n                                      aria-hidden='true'\n                                    />\n                                  </Link>\n                                  <Link\n                                    to={`/password/${password._id}/delete`}\n                                    type='button'\n                                    className='inline-flex items-center justify-center w-8 h-8 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\n                                    <TrashIcon\n                                      className='w-5 h-5 text-gray-400 rounded hover:bg-red-600 hover:text-gray-100'\n                                      aria-hidden='true'\n                                    />\n                                  </Link>\n                                </div>\n                              </div>\n                            </li>\n                          </div>\n                        </div>\n                      ))}\n                    </ul>{\" \"}\n                  </Fragment>\n                )}\n              </Fragment>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default PasswordContent;\n","/** @format */\nimport axios from \"axios\";\nimport {\n  PASSWORD_LIST_REQUEST,\n  PASSWORD_LIST_SUCCESS,\n  PASSWORD_LIST_FAIL,\n  PASSWORD_DELETE_REQUEST,\n  PASSWORD_DELETE_SUCCESS,\n  PASSWORD_DELETE_FAIL,\n  PASSWORD_CREATE_REQUEST,\n  PASSWORD_CREATE_SUCCESS,\n  PASSWORD_CREATE_FAIL,\n  PASSWORD_DETAILS_REQUEST,\n  PASSWORD_DETAILS_SUCCESS,\n  PASSWORD_DETAILS_FAIL,\n  PASSWORD_UPDATE_REQUEST,\n  PASSWORD_UPDATE_SUCCESS,\n  PASSWORD_UPDATE_FAIL,\n} from \"../constants/passwordConstants\";\n\nimport { toast } from \"react-toastify\";\n\nexport const listPasswords = () => async (dispatch) => {\n  try {\n    dispatch({ type: PASSWORD_LIST_REQUEST });\n\n    const { data } = await axios.get(\"api/passwords\");\n\n    dispatch({\n      type: PASSWORD_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PASSWORD_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createPassword = (formData) => async (dispatch) => {\n  try {\n    dispatch({ type: PASSWORD_CREATE_REQUEST });\n\n    const { data } = await axios.post(`/api/passwords/`, formData);\n\n    dispatch({\n      type: PASSWORD_CREATE_SUCCESS,\n      payload: data,\n    });\n    toast.success(\"Password Created\");\n  } catch (error) {\n    dispatch({\n      type: PASSWORD_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listPasswordDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PASSWORD_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/passwords/${id}`);\n\n    dispatch({\n      type: PASSWORD_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PASSWORD_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deletePassword = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PASSWORD_DELETE_REQUEST, payload: id });\n\n    await axios.delete(`/api/passwords/${id}`);\n\n    dispatch({\n      type: PASSWORD_DELETE_SUCCESS,\n    });\n    toast.error(\"Password Deleted\");\n  } catch (error) {\n    dispatch({\n      type: PASSWORD_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updatePassword = (password) => async (dispatch) => {\n  try {\n    dispatch({ type: PASSWORD_UPDATE_REQUEST });\n\n    const { data } = await axios.put(\n      `/api/passwords/${password._id}`,\n      password\n    );\n    dispatch({\n      type: PASSWORD_UPDATE_SUCCESS,\n      payload: data,\n    });\n    dispatch({ type: PASSWORD_DETAILS_SUCCESS, payload: data });\n    toast.info(\"Password Updated\");\n  } catch (error) {\n    dispatch({\n      type: PASSWORD_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","/** @format */\r\n\r\nexport const NOTE_LIST_REQUEST = \"NOTE_LIST_REQUEST\";\r\nexport const NOTE_LIST_SUCCESS = \"NOTE_LIST_SUCCESS\";\r\nexport const NOTE_LIST_FAIL = \"NOTE_LIST_FAIL\";\r\nexport const NOTE_LIST_CLEAR = \"NOTE_LIST_CLEAR\";\r\n\r\nexport const NOTE_CREATE_REQUEST = \"NOTE_CREATE_REQUEST\";\r\nexport const NOTE_CREATE_SUCCESS = \"NOTE_CREATE_SUCCESS\";\r\nexport const NOTE_CREATE_FAIL = \"NOTE_CREATE_FAIL\";\r\nexport const NOTE_CREATE_RESET = \"NOTE_CREATE_RESET\";\r\n\r\nexport const NOTE_DELETE_REQUEST = \"NOTE_DELETE_REQUEST\";\r\nexport const NOTE_DELETE_SUCCESS = \"NOTE_DELETE_SUCCESS\";\r\nexport const NOTE_DELETE_FAIL = \"NOTE_DELETE_FAIL\";\r\nexport const NOTE_DELETE_RESET = \"NOTE_DELETE_RESET\";\r\n\r\nexport const NOTE_UPDATE_REQUEST = \"NOTE_UPDATE_REQUEST\";\r\nexport const NOTE_UPDATE_SUCCESS = \"NOTE_UPDATE_SUCCESS\";\r\nexport const NOTE_UPDATE_FAIL = \"NOTE_UPDATE_FAIL\";\r\nexport const NOTE_UPDATE_RESET = \"NOTE_UPDATE_RESET\";\r\n\r\nexport const NOTE_DETAILS_REQUEST = \"NOTE_DETAILS_REQUEST\";\r\nexport const NOTE_DETAILS_SUCCESS = \"NOTE_DETAILS_SUCCESS\";\r\nexport const NOTE_DETAILS_FAIL = \"NOTE_DETAILS_FAIL\";\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { PaperClipIcon } from \"@heroicons/react/outline\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst noteState = () => {\r\n  return (\r\n    <div className='py-12 border-4 border-gray-200 border-dashed rounded-lg ove rflow-hidden h-96 md:py-20 lg:py-24'>\r\n      <div className='relative px-4 mx-auto max-w-7xl sm:px-6 lg:px-8'>\r\n        <div className='text-center '>\r\n          <svg\r\n            className='w-12 h-12 mx-auto text-gray-400'\r\n            fill='none'\r\n            viewBox='0 0 24 24'\r\n            stroke='currentColor'\r\n            aria-hidden='true'>\r\n            <path\r\n              vectorEffect='non-scaling-stroke'\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n              strokeWidth={2}\r\n              d='M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z'\r\n            />\r\n          </svg>\r\n          <h3 className='mt-2 text-sm font-medium text-gray-900'>No notes</h3>\r\n          <p className='mt-1 text-sm text-gray-500'>\r\n            Get started by creating a new note.\r\n          </p>\r\n          <div className='mt-6'>\r\n            <Link\r\n              to='/add/note'\r\n              type='button'\r\n              className='inline-flex items-center px-4 py-2 text-sm font-medium text-white transition-colors ease-in-out delay-75 transform bg-yellow-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n              <PaperClipIcon\r\n                className='w-5 h-5 mr-2 -ml-1'\r\n                aria-hidden='true'\r\n              />\r\n              New Note\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className='relative'>\r\n          <div className='py-2'></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default noteState;\r\n","/** @format */\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TrashIcon, PencilIcon } from \"@heroicons/react/outline\";\nimport Loader from \"../loader/Loader\";\nimport { listNotes } from \"../../actions/noteActions\";\n\nimport NoteState from \"../emptyState/noteState\";\n\n//Toastify\nimport { ToastContainer } from \"react-toastify\";\n\nconst PasswordContent = (props) => {\n  const dispatch = useDispatch();\n  const noteList = useSelector((state) => state.noteList);\n  const { loading, error, notes } = noteList;\n\n  useEffect(() => {\n    dispatch(listNotes());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <main className='relative flex-1 overflow-y-auto focus:outline-none'>\n        <div className='py-6'>\n          <div className='px-4 mx-auto max-w-7xl sm:px-6 md:px-8'>\n            <div>\n              <ToastContainer autoClose={2000} />\n              <h1 className='text-2xl font-semibold text-gray-900'>\n                {props.title}\n              </h1>\n              <Fragment>\n                {loading ? (\n                  <Loader />\n                ) : error ? (\n                  <h3 className='animate-pulse'>{error}</h3>\n                ) : notes.length === 0 ? (\n                  <NoteState />\n                ) : (\n                  <Fragment>\n                    <ul className='grid grid-cols-1 gap-5 mt-3 sm:gap-6 sm:grid-cols-2 lg:grid-cols-4 group'>\n                      {notes.map((note) => (\n                        <div key={note._id}>\n                          <div className='border-r-4 rounded-md hover:border-yellow-400'>\n                            <li className='flex col-span-1 rounded-md shadow-sm'>\n                              <img\n                                alt='logo'\n                                src='https://media.publit.io/file/noun-triangle.svg'\n                                className='flex items-center flex-shrink-0 object-contain text-sm font-medium text-white shadow-sm w-14 rounded-l-md' //media.publit.io/file/triangle/orangeTriangle.svg\",\"\n                              />\n\n                              <div className='flex flex-row-reverse items-center flex-1 truncate bg-white border-t border-b border-r border-gray-200 rounded-r-md'>\n                                <div className='flex-1 px-4 py-2 text-sm truncate'>\n                                  {note.title}\n                                  <p className='text-gray-500 truncate '>\n                                    {note.caption}\n                                  </p>\n                                </div>\n                                <div className='absolute flex-shrink-0 m-2 transform scale-0 group-hover:scale-100 '>\n                                  <Link\n                                    to={`/note/${note._id}/edit`}\n                                    type='button'\n                                    className='inline-flex items-center justify-center w-8 h-8 mr-1 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\n                                    <PencilIcon\n                                      className='w-5 h-5 text-gray-400 rounded hover:bg-gray-800 hover:text-gray-100'\n                                      aria-hidden='true'\n                                    />\n                                  </Link>\n                                  <Link\n                                    to={`/note/${note._id}/delete`}\n                                    type='button'\n                                    className='inline-flex items-center justify-center w-8 h-8 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\n                                    <TrashIcon\n                                      className='w-5 h-5 text-gray-400 rounded hover:bg-red-600 hover:text-gray-100'\n                                      aria-hidden='true'\n                                    />\n                                  </Link>\n                                </div>\n                              </div>\n                            </li>\n                          </div>\n                        </div>\n                      ))}\n                    </ul>{\" \"}\n                  </Fragment>\n                )}\n              </Fragment>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default PasswordContent;\n","/** @format */\r\nimport axios from \"axios\";\r\nimport {\r\n  NOTE_LIST_REQUEST,\r\n  NOTE_LIST_SUCCESS,\r\n  NOTE_LIST_FAIL,\r\n  NOTE_DELETE_REQUEST,\r\n  NOTE_DELETE_SUCCESS,\r\n  NOTE_DELETE_FAIL,\r\n  NOTE_CREATE_REQUEST,\r\n  NOTE_CREATE_SUCCESS,\r\n  NOTE_CREATE_FAIL,\r\n  NOTE_DETAILS_REQUEST,\r\n  NOTE_DETAILS_SUCCESS,\r\n  NOTE_DETAILS_FAIL,\r\n  NOTE_UPDATE_REQUEST,\r\n  NOTE_UPDATE_SUCCESS,\r\n  NOTE_UPDATE_FAIL,\r\n} from \"../constants/noteConstants\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const listNotes = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NOTE_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"api/notes\");\r\n\r\n    dispatch({\r\n      type: NOTE_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTE_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createNote = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NOTE_CREATE_REQUEST });\r\n\r\n    const { data } = await axios.post(`/api/notes/`, formData);\r\n\r\n    dispatch({\r\n      type: NOTE_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    toast.success(\"Note Created\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTE_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listNoteDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NOTE_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/notes/${id}`);\r\n\r\n    dispatch({\r\n      type: NOTE_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTE_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteNote = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NOTE_DELETE_REQUEST, payload: id });\r\n\r\n    await axios.delete(`/api/notes/${id}`);\r\n\r\n    dispatch({\r\n      type: NOTE_DELETE_SUCCESS,\r\n    });\r\n    toast.error(\"Note Deleted\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTE_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateNote = (note) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NOTE_UPDATE_REQUEST });\r\n\r\n    const { data } = await axios.put(`/api/notes/${note._id}`, note);\r\n    dispatch({\r\n      type: NOTE_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: NOTE_DETAILS_SUCCESS, payload: data });\r\n    toast.info(\"Note Updated\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTE_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","/** @format */\n\nimport React from \"react\";\nimport Sidebar from \"../navbar/Sidebar\";\nimport SearchBar from \"../navbar/SearchBar\";\n\nimport PasswordContent from \"../content/PasswordContent\";\nimport NoteContent from \"../content/NoteContent\";\n// import AddressContent from \"../content/AddressContent\";\n\nconst DashboardScreen = () => {\n  return (\n    <div className='relative flex flex-1 h-screen overflow-hidden bg-gray-100'>\n      <Sidebar />\n      <div className='flex flex-col flex-1 w-0 overflow-auto'>\n        <SearchBar />\n\n        <PasswordContent title='Passwords' />\n        <NoteContent title='Notes' />\n        {/* <AddressContent title='Addresses' /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardScreen;\n","/** @format */\n\nimport React from \"react\";\nimport Sidebar from \"../navbar/Sidebar\";\nimport SearchBar from \"../navbar/SearchBar\";\nimport PasswordContent from \"../content/PasswordContent\";\n\nconst DashboardScreen = () => {\n  return (\n    <div className='relative flex flex-1 h-screen overflow-auto bg-gray-100'>\n      <Sidebar />\n      <div className='flex flex-col flex-1 w-0 overflow-auto'>\n        <SearchBar />\n        <PasswordContent title='Passwords' />\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardScreen;\n","/** @format */\n\nimport React from \"react\";\nimport Sidebar from \"../navbar/Sidebar\";\nimport SearchBar from \"../navbar/SearchBar\";\nimport NoteContent from \"../content/NoteContent\";\n\nconst DashboardScreen = () => {\n  return (\n    <div className='relative flex flex-1 h-screen overflow-hidden bg-gray-100'>\n      <Sidebar />\n      <div className='flex flex-col flex-1 w-0 overflow-hidden'>\n        <SearchBar />\n        <NoteContent title='Notes' />\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardScreen;\n","/** @format */\n\nimport React from \"react\";\nimport { MapIcon } from \"@heroicons/react/solid\";\n\nconst AddressContent = (props) => {\n  return (\n    <div>\n      <main className='relative flex-1 overflow-y-auto focus:outline-none'>\n        <div className='py-6'>\n          <div className='px-4 mx-auto max-w-7xl sm:px-6 md:px-8'>\n            <h1 className='text-2xl font-semibold text-gray-900'>\n              {props.title}\n            </h1>\n          </div>\n          <div className='text-center'>\n            <svg\n              className='w-12 h-12 mx-auto text-gray-400'\n              fill='none'\n              viewBox='0 0 24 24'\n              stroke='currentColor'\n              aria-hidden='true'>\n              <path\n                vectorEffect='non-scaling-stroke'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                strokeWidth={2}\n                d='M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z'\n              />\n            </svg>\n            <h3 className='mt-2 text-sm font-medium text-gray-900'>No notes</h3>\n            <p className='mt-1 text-sm text-gray-500'>\n              Get started by creating a new address.\n            </p>\n            <div className='mt-6'>\n              <button\n                type='button'\n                className='inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-yellow-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                <MapIcon className='w-5 h-5 mr-2 -ml-1' aria-hidden='true' />\n                New Address\n              </button>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default AddressContent;\n","/** @format */\n\nimport React from \"react\";\nimport Sidebar from \"../navbar/Sidebar\";\nimport SearchBar from \"../navbar/SearchBar\";\nimport AddressContent from \"../content/AddressContent\";\n\nconst DashboardScreen = () => {\n  return (\n    <div className='relative flex flex-1 h-screen overflow-hidden bg-gray-100'>\n      <Sidebar />\n      <div className='flex flex-col flex-1 w-0 overflow-hidden'>\n        <SearchBar />\n        <AddressContent title='Addresses' />\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardScreen;\n","/** @format */\nimport React from \"react\";\nimport { Fragment, useState, useRef, useEffect } from \"react\";\nimport { useNavigate, Link, useParams } from \"react-router-dom\";\n\n//Redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPassword } from \"../../actions/passwordActions\";\nimport { PASSWORD_CREATE_RESET } from \"../../constants/passwordConstants\";\n\n//Final Form\nimport { Form, Field } from \"react-final-form\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { XCircleIcon, EyeIcon, EyeOffIcon } from \"@heroicons/react/solid\";\n\nconst required = (value) => (value ? undefined : \"Required\");\n\nconst AddPasswordModal = () => {\n  const dispatch = useDispatch();\n  const passwordId = useParams();\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(true);\n\n  const cancelButtonRef = useRef(null);\n\n  const passwordCreate = useSelector((state) => state.passwordCreate);\n  const {\n    // loading: loadingCreate,\n    // error: errorCreate,\n    success: successCreate,\n    password: createdPassword,\n  } = passwordCreate;\n  const passwordDetails = useSelector((state) => state.passwordDetails);\n  const { password } = passwordDetails;\n\n  useEffect(() => {\n    dispatch({ type: PASSWORD_CREATE_RESET });\n    if (successCreate) {\n      navigate(\"/dashboard\");\n    }\n  }, [\n    dispatch,\n    passwordId,\n    password,\n    successCreate,\n    navigate,\n    createdPassword,\n  ]);\n\n  //TOGGLE PASSWORD VISION\n  const [passwordShown, setPasswordShown] = useState(false);\n  const togglePassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  if (!open) {\n    navigate(\"/\");\n  }\n\n  const onSubmit = (values) => {\n    dispatch(createPassword(values));\n  };\n  return (\n    <Fragment>\n      <Transition.Root show={open} as={Fragment}>\n        <Dialog\n          as='div'\n          static\n          className='fixed inset-0 z-10 overflow-y-auto'\n          initialFocus={cancelButtonRef}\n          open={open}\n          onClose={setOpen}>\n          <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\n            <div className='flex-auto'>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-out duration-300'\n                enterFrom='opacity-0'\n                enterTo='opacity-100'\n                leave='ease-in duration-200'\n                leaveFrom='opacity-100'\n                leaveTo='opacity-0'>\n                <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 ' />\n              </Transition.Child>\n\n              {/* This element is to trick the browser into centering the modal contents. */}\n              <span\n                className='hidden sm:inline-block sm:align-middle sm:h-screen'\n                aria-hidden='true'>\n                &#8203;\n              </span>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-out duration-300'\n                enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n                enterTo='opacity-100 translate-y-0 sm:scale-100'\n                leave='ease-in duration-200'\n                leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n                leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\n                {/* This controls the actual width of modal based on responsive design */}\n                <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-gray-100 rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6 lg:max-w-5xl'>\n                  <div className='px-4 py-5 sm:p-6'>\n                    <h3 className='p-2 space-y-8 text-lg font-medium leading-6 text-gray-800 bg-yellow-500 divide-y divide-gray-200 shadow-lg bg-yellow-500border-2 rounded-t-md sm:space-y-5'>\n                      Add Password\n                    </h3>\n                    <hr />\n\n                    <Form\n                      onSubmit={onSubmit}\n                      render={({ handleSubmit, submitError }) => (\n                        <form onSubmit={handleSubmit}>\n                          <div className='p-4 space-y-8 bg-white border-2 border-gray-100 divide-y divide-gray-200 shadow-lg rounded-b-md sm:space-y-5'>\n                            <div>\n                              <div className=''>\n                                <label\n                                  htmlFor='company-website'\n                                  className='block text-sm font-medium text-gray-700'>\n                                  URL\n                                </label>\n                                <Field\n                                  name='url'\n                                  component='input'\n                                  placeholder='example.com'\n                                  validate={required}>\n                                  {({ input, meta, placeholder }) => (\n                                    <div>\n                                      <div className='flex'>\n                                        <span className='block px-4 py-2 pl-1 mb-2 text-gray-500 border border-r-0 border-gray-300 border- rounded-l-md bg-gray-50'>\n                                          https://\n                                        </span>\n                                        <input\n                                          {...input}\n                                          placeholder={placeholder}\n                                          className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 shadow rounded-r-md text-l focus:outline-none border-gray focus:border-blue-500'\n                                        />\n                                      </div>\n                                      {meta.error && meta.touched && (\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                          <div className='flex'>\n                                            <div className='flex-shrink-0'>\n                                              <XCircleIcon\n                                                className='w-5 h-5 text-red-400'\n                                                aria-hidden='true'\n                                              />\n                                            </div>\n                                            <div className='ml-3'>\n                                              <h3 className='text-sm font-medium text-red-800'>\n                                                {meta.error}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  )}\n                                </Field>\n                              </div>\n\n                              <div className='grid grid-cols-6 gap-6 '>\n                                <Field\n                                  name='username'\n                                  component='input'\n                                  placeholder='Enter Username'\n                                  validate={required}>\n                                  {({ input, meta, placeholder }) => (\n                                    <div className='col-span-6 sm:col-span-3'>\n                                      <div>\n                                        <label\n                                          htmlFor='first-name'\n                                          className='block text-sm font-medium text-gray-700'>\n                                          Username\n                                        </label>\n                                        <input\n                                          type='text'\n                                          {...input}\n                                          placeholder={placeholder}\n                                          className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                                        />\n                                      </div>\n                                      {meta.error && meta.touched && (\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                          <div className='flex'>\n                                            <div className='flex-shrink-0'>\n                                              <XCircleIcon\n                                                className='w-5 h-5 text-red-400'\n                                                aria-hidden='true'\n                                              />\n                                            </div>\n                                            <div className='ml-3'>\n                                              <h3 className='text-sm font-medium text-red-800'>\n                                                {meta.error}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  )}\n                                </Field>\n                                <Field\n                                  name='sitePassword'\n                                  component='input'\n                                  placeholder='Enter Password'\n                                  validate={required}>\n                                  {({ input, meta, placeholder }) => (\n                                    <div className='col-span-6 sm:col-span-3'>\n                                      <div>\n                                        <label\n                                          htmlFor='first-name'\n                                          className='block text-sm font-medium text-gray-700'>\n                                          Site Password\n                                        </label>\n                                        <div className='flex '>\n                                          <input\n                                            type={\n                                              passwordShown\n                                                ? \"text\"\n                                                : \"password\"\n                                            }\n                                            {...input}\n                                            placeholder={placeholder}\n                                            className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-t-2 border-b-2 border-l-2 border-gray-300 shadow rounded-l-md text-l focus:outline-none focus:border-blue-500'\n                                          />\n                                          <span className=''>\n                                            <div className='relative grid gap-0 px-2 py-2 bg-gray-100 border-2 border-t-2 border-b-2 border-r-2 border-gray-300 shadow focus:outline-none hover:bg-gray-200 rounded-r-md sm:gap-2 sm:p-x-6 '>\n                                              <button\n                                                type='button'\n                                                onClick={togglePassword}\n                                                className='flex-shrink-0 w-6 h-auto text-indigo-600 focus:outline-none'\n                                                aria-hidden='true'>\n                                                {passwordShown ? (\n                                                  <EyeOffIcon />\n                                                ) : (\n                                                  <EyeIcon />\n                                                )}\n                                              </button>\n                                            </div>\n                                          </span>\n                                        </div>\n                                      </div>\n\n                                      {meta.error && meta.touched && (\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                          <div className='flex'>\n                                            <div className='flex-shrink-0'>\n                                              <XCircleIcon\n                                                className='w-5 h-5 text-red-400'\n                                                aria-hidden='true'\n                                              />\n                                            </div>\n                                            <div className='ml-3'>\n                                              <h3 className='text-sm font-medium text-red-800'>\n                                                {meta.error}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  )}\n                                </Field>\n\n                                {submitError && (\n                                  <div className='p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md bg-red-50'>\n                                    <div className='flex'>\n                                      <div className='flex-shrink-0'>\n                                        <XCircleIcon\n                                          className='w-5 h-5 text-red-400'\n                                          aria-hidden='true'\n                                        />\n                                      </div>\n                                      <div className='ml-3'>\n                                        <h3 className='text-sm font-medium text-red-800'>\n                                          {submitError}\n                                        </h3>\n                                      </div>\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n\n                              <Field\n                                name='notes'\n                                component='textarea'\n                                placeholder='Notes'\n                                className='box-border block w-full h-32 p-4 px-4 py-2 pl-1 mb-2 border-4 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                              />\n                            </div>\n                            <div className='pt-5'>\n                              <div className='flex justify-end'>\n                                <Link\n                                  to='/passwords'\n                                  type='button'\n                                  className='px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                                  Cancel\n                                </Link>\n\n                                <button\n                                  type='submit'\n                                  className='inline-flex justify-center px-4 py-2 ml-3 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                                  Create\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </form>\n                      )}\n                    />\n                  </div>\n                </div>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition.Root>\n    </Fragment>\n  );\n};\n\nexport default AddPasswordModal;\n","/** @format */\n\nimport React from \"react\";\nimport { Fragment, useState, useEffect, useRef } from \"react\";\nimport { Form, Field } from \"react-final-form\";\nimport { Dialog, Transition } from \"@headlessui/react\";\n\nimport { XCircleIcon, EyeIcon, EyeOffIcon } from \"@heroicons/react/solid\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate, useParams, useNavigate } from \"react-router-dom\";\nimport {\n  listPasswordDetails,\n  updatePassword,\n} from \"../../actions/passwordActions\";\nimport { PASSWORD_UPDATE_RESET } from \"../../constants/passwordConstants\";\n\nconst required = (value) => (value ? undefined : \"Required\");\n\nconst EditPasswordModal = () => {\n  const dispatch = useDispatch();\n  const passwordId = useParams();\n  const navigate = useNavigate();\n\n  const [open, setOpen] = useState(true);\n  const cancelButtonRef = useRef(null);\n\n  const passwordDetails = useSelector((state) => state.passwordDetails);\n  const { password } = passwordDetails;\n\n  const passwordUpdate = useSelector((state) => state.passwordUpdate);\n  const { success } = passwordUpdate;\n\n  useEffect(() => {\n    if (success) {\n      dispatch({ type: PASSWORD_UPDATE_RESET });\n      navigate(\"/passwords\");\n    } else {\n      if (!password.name || password._id !== passwordId) {\n        dispatch(listPasswordDetails(passwordId.id));\n      } else {\n      }\n    }\n  }, [dispatch, passwordId, password, success, navigate]);\n  let formData = {\n    url: password.url,\n    username: password.username,\n    sitePassword: password.sitePassword,\n    notes: password.notes,\n  };\n  //TOGGLE PASSWORD VISION\n  const [passwordShown, setPasswordShown] = useState(false);\n  const togglePassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  if (!open) {\n    return <Navigate to='/' />;\n  }\n\n  const onSubmit = (values) => {\n    dispatch(updatePassword({ _id: passwordId.id, values }));\n  };\n\n  return (\n    <Fragment>\n      <Transition.Root show={open} as={Fragment}>\n        <Dialog\n          as='div'\n          static\n          className='fixed inset-0 z-10 overflow-y-auto'\n          initialFocus={cancelButtonRef}\n          open={open}\n          onClose={setOpen}>\n          <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\n            <div className='flex-auto'>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-out duration-300'\n                enterFrom='opacity-0'\n                enterTo='opacity-100'\n                leave='ease-in duration-200'\n                leaveFrom='opacity-100'\n                leaveTo='opacity-0'>\n                <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 ' />\n              </Transition.Child>\n\n              {/* This element is to trick the browser into centering the modal contents. */}\n              <span\n                className='hidden sm:inline-block sm:align-middle sm:h-screen'\n                aria-hidden='true'>\n                &#8203;\n              </span>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-out duration-300'\n                enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n                enterTo='opacity-100 translate-y-0 sm:scale-100'\n                leave='ease-in duration-200'\n                leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n                leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\n                {/* This controls the actual width of modal based on responsive design */}\n                <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-gray-100 rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6 lg:max-w-5xl'>\n                  <div className='px-4 py-5 sm:p-6'>\n                    <h3 className='p-2 space-y-8 text-lg font-medium leading-6 text-gray-800 bg-yellow-500 border-2 border-gray-300 divide-y divide-gray-200 shadow-lg rounded-t-md sm:space-y-5'>\n                      Edit Password\n                    </h3>\n                    <hr />\n\n                    <Form\n                      onSubmit={onSubmit}\n                      initialValues={{\n                        ...formData,\n                      }}\n                      render={({ handleSubmit, submitError }) => (\n                        <form onSubmit={handleSubmit}>\n                          <div className='p-4 space-y-8 bg-white border-2 border-gray-100 divide-y divide-gray-200 shadow-lg rounded-b-md sm:space-y-5'>\n                            <div>\n                              <div className=''>\n                                <label\n                                  htmlFor='company-website'\n                                  className='block text-sm font-medium text-gray-700'>\n                                  URL\n                                </label>\n                                <Field\n                                  name='url'\n                                  component='input'\n                                  placeholder='example.com'\n                                  validate={required}>\n                                  {({ input, meta, placeholder }) => (\n                                    <div>\n                                      <div className='flex'>\n                                        <span className='block px-4 py-2 pl-1 mb-2 text-gray-500 border border-r-0 border-gray-300 border- rounded-l-md bg-gray-50'>\n                                          https://\n                                        </span>\n                                        <input\n                                          {...input}\n                                          placeholder={placeholder}\n                                          className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 shadow rounded-r-md text-l focus:outline-none border-gray focus:border-blue-500'\n                                        />\n                                      </div>\n                                      {meta.error && meta.touched && (\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                          <div className='flex'>\n                                            <div className='flex-shrink-0'>\n                                              <XCircleIcon\n                                                className='w-5 h-5 text-red-400'\n                                                aria-hidden='true'\n                                              />\n                                            </div>\n                                            <div className='ml-3'>\n                                              <h3 className='text-sm font-medium text-red-800'>\n                                                {meta.error}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  )}\n                                </Field>\n                              </div>\n\n                              <div className='grid grid-cols-6 gap-6 '>\n                                <Field\n                                  name='username'\n                                  component='input'\n                                  placeholder='Enter Username'\n                                  validate={required}>\n                                  {({ input, meta, placeholder }) => (\n                                    <div className='col-span-6 sm:col-span-3'>\n                                      <div>\n                                        <label\n                                          htmlFor='first-name'\n                                          className='block text-sm font-medium text-gray-700'>\n                                          Username\n                                        </label>\n                                        <input\n                                          type='text'\n                                          {...input}\n                                          placeholder={placeholder}\n                                          className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                                        />\n                                      </div>\n                                      {meta.error && meta.touched && (\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                          <div className='flex'>\n                                            <div className='flex-shrink-0'>\n                                              <XCircleIcon\n                                                className='w-5 h-5 text-red-400'\n                                                aria-hidden='true'\n                                              />\n                                            </div>\n                                            <div className='ml-3'>\n                                              <h3 className='text-sm font-medium text-red-800'>\n                                                {meta.error}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  )}\n                                </Field>\n                                <Field\n                                  name='sitePassword'\n                                  component='input'\n                                  placeholder='password.sitePassword'\n                                  validate={required}>\n                                  {({ input, meta, placeholder }) => (\n                                    <div className='col-span-6 sm:col-span-3'>\n                                      <div>\n                                        <label\n                                          htmlFor='first-name'\n                                          className='block text-sm font-medium text-gray-700'>\n                                          Site Password\n                                        </label>\n                                        <div className='flex '>\n                                          <input\n                                            type={\n                                              passwordShown\n                                                ? \"text\"\n                                                : \"password\"\n                                            }\n                                            {...input}\n                                            placeholder={placeholder}\n                                            className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-t-2 border-b-2 border-l-2 border-gray-300 shadow rounded-l-md text-l focus:outline-none focus:border-blue-500'\n                                          />\n                                          <span className=''>\n                                            <div className='relative grid gap-0 px-2 py-2 bg-gray-100 border-2 border-t-2 border-b-2 border-r-2 border-gray-300 shadow focus:outline-none hover:bg-gray-200 rounded-r-md sm:gap-2 sm:p-x-6 '>\n                                              <button\n                                                type='button'\n                                                onClick={togglePassword}\n                                                className='flex-shrink-0 w-6 h-auto text-indigo-600 focus:outline-none'\n                                                aria-hidden='true'>\n                                                {passwordShown ? (\n                                                  <EyeOffIcon />\n                                                ) : (\n                                                  <EyeIcon />\n                                                )}\n                                              </button>\n                                            </div>\n                                          </span>\n                                        </div>\n                                      </div>\n\n                                      {meta.error && meta.touched && (\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\n                                          <div className='flex'>\n                                            <div className='flex-shrink-0'>\n                                              <XCircleIcon\n                                                className='w-5 h-5 text-red-400'\n                                                aria-hidden='true'\n                                              />\n                                            </div>\n                                            <div className='ml-3'>\n                                              <h3 className='text-sm font-medium text-red-800'>\n                                                {meta.error}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  )}\n                                </Field>\n\n                                {submitError && (\n                                  <div className='p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md bg-red-50'>\n                                    <div className='flex'>\n                                      <div className='flex-shrink-0'>\n                                        <XCircleIcon\n                                          className='w-5 h-5 text-red-400'\n                                          aria-hidden='true'\n                                        />\n                                      </div>\n                                      <div className='ml-3'>\n                                        <h3 className='text-sm font-medium text-red-800'>\n                                          {submitError}\n                                        </h3>\n                                      </div>\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n\n                              <Field\n                                name='notes'\n                                component='textarea'\n                                placeholder='Enter Notes Here'\n                                className='box-border block w-full h-32 p-4 px-4 py-2 pl-1 mb-2 border-4 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                              />\n                            </div>\n                            <div className='pt-5'>\n                              <div className='flex justify-end'>\n                                <button\n                                  type='button'\n                                  className='px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                                  Cancel\n                                </button>\n                                <button\n                                  type='submit'\n                                  className='inline-flex justify-center px-4 py-2 ml-3 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                                  Update\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </form>\n                      )}\n                    />\n                  </div>\n                </div>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition.Root>\n    </Fragment>\n  );\n};\n\nexport default EditPasswordModal;\n","/** @format */\n\nimport React from \"react\";\nimport { Fragment, useRef, useState } from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { ExclamationIcon } from \"@heroicons/react/outline\";\nimport { Navigate } from \"react-router-dom\";\n\nexport default function Modal(props) {\n  const [open, setOpen] = useState(true);\n\n  const cancelButtonRef = useRef(null);\n\n  if (!open) {\n    return <Navigate t to='/' />;\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as='div'\n        static\n        className='fixed inset-0 z-10 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        open={open}\n        onClose={setOpen}>\n        <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'>\n            <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-80 ' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className='hidden sm:inline-block sm:align-middle sm:h-screen'\n            aria-hidden='true'>\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\n            <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6'>\n              <div className='sm:flex sm:items-start'>\n                <div className='flex items-center justify-center flex-shrink-0 w-12 h-12 mx-auto bg-red-100 rounded-full sm:mx-0 sm:h-10 sm:w-10'>\n                  <ExclamationIcon\n                    className='w-6 h-6 text-red-600'\n                    aria-hidden='true'\n                  />\n                </div>\n                <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\n                  <Dialog.Title\n                    as='h3'\n                    className='text-lg font-medium leading-6 text-gray-900'>\n                    {props.title}\n                  </Dialog.Title>\n                  <div className='mt-2'>\n                    <p className='text-sm text-gray-500'>{props.content}</p>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-4 sm:flex sm:flex-row-reverse'>\n                {props.actions}\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n}\n","/** @format */\nimport React from \"react\";\nimport { useRef, useState, useEffect } from \"react\";\n\n//REDUX\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate, Link, useParams, useNavigate } from \"react-router-dom\";\nimport { deletePassword } from \"../../actions/passwordActions\";\nimport { PASSWORD_DELETE_RESET } from \"../../constants/passwordConstants\";\n\nimport StandardModal from \"./StandardModal\";\n\nconst DeletePasswordModal = ({ history }) => {\n  const dispatch = useDispatch();\n  const passwordId = useParams();\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(true);\n  const cancelButtonRef = useRef(null);\n\n  const passwordDelete = useSelector((state) => state.passwordDelete);\n  const {\n    // loading: loadingDelete,\n    // error: errorDelete,\n    success: successDelete,\n  } = passwordDelete;\n  const passwordDetails = useSelector((state) => state.passwordDetails);\n  const { password } = passwordDetails;\n\n  useEffect(() => {\n    if (successDelete) {\n      dispatch({ type: PASSWORD_DELETE_RESET });\n      navigate(\"/\");\n    }\n  }, [dispatch, history, navigate, passwordId, password, successDelete]);\n\n  if (!open) {\n    return <Navigate to='/' />;\n  }\n\n  const deleteHandler = (id) => {\n    dispatch(deletePassword(id));\n  };\n\n  const actions = (\n    <React.Fragment>\n      <button\n        type='button'\n        className='inline-flex justify-center w-full px-4 py-2 text-base font-medium text-white bg-red-600 border border-transparent rounded-md shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm'\n        onClick={() => deleteHandler(passwordId.id)}>\n        Delete\n      </button>\n      <Link\n        to='/passwords'\n        type='button'\n        className='inline-flex justify-center w-full px-4 py-2 mt-3 text-base font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:w-auto sm:text-sm'\n        onClick={() => setOpen(false)}\n        ref={cancelButtonRef}>\n        Cancel\n      </Link>\n    </React.Fragment>\n  );\n\n  return (\n    <div>\n      <StandardModal\n        title='Delete Password'\n        content='Are you sure you want to delete this password?'\n        actions={actions}\n      />\n    </div>\n  );\n};\n\nexport default DeletePasswordModal;\n","/** @format */\r\n\r\nimport { Fragment, useState, useRef, useEffect } from \"react\";\r\n\r\n//Final Form\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { XCircleIcon } from \"@heroicons/react/solid\";\r\n\r\n//Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNote } from \"../../actions/noteActions\";\r\nimport { NOTE_CREATE_RESET } from \"../../constants/noteConstants\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\n\r\nconst required = (value) => (value ? undefined : \"Required\");\r\n\r\nconst AddNoteModal = () => {\r\n  const dispatch = useDispatch();\r\n  const noteId = useParams();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n\r\n  const {\r\n    // loading: loadingCreate,\r\n    // error: errorCreate,\r\n    success: successNoteCreate,\r\n    note: createdNote,\r\n  } = noteCreate;\r\n  const noteDetails = useSelector((state) => state.noteDetails);\r\n  const { note } = noteDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: NOTE_CREATE_RESET });\r\n    // console.log(user._id);\r\n    if (successNoteCreate) {\r\n      navigate(\"/dashboard\");\r\n    }\r\n  }, [dispatch, noteId, note, successNoteCreate, navigate, createdNote]);\r\n\r\n  if (!open) {\r\n    navigate(\"/\");\r\n  }\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(createNote(values));\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Transition.Root show={open} as={Fragment}>\r\n        <Dialog\r\n          as='div'\r\n          static\r\n          className='fixed inset-0 z-10 overflow-y-auto'\r\n          initialFocus={cancelButtonRef}\r\n          open={open}\r\n          onClose={setOpen}>\r\n          <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\r\n            <div className='flex-auto'>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-out duration-300'\r\n                enterFrom='opacity-0'\r\n                enterTo='opacity-100'\r\n                leave='ease-in duration-200'\r\n                leaveFrom='opacity-100'\r\n                leaveTo='opacity-0'>\r\n                <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 ' />\r\n              </Transition.Child>\r\n\r\n              {/* This element is to trick the browser into centering the modal contents. */}\r\n              <span\r\n                className='hidden sm:inline-block sm:align-middle sm:h-screen'\r\n                aria-hidden='true'>\r\n                &#8203;\r\n              </span>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-out duration-300'\r\n                enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\r\n                enterTo='opacity-100 translate-y-0 sm:scale-100'\r\n                leave='ease-in duration-200'\r\n                leaveFrom='opacity-100 translate-y-0 sm:scale-100'\r\n                leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\r\n                {/* This controls the actual width of modal based on responsive design */}\r\n                <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-gray-100 rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6 lg:max-w-5xl'>\r\n                  <div className='px-4 py-5 sm:p-6'>\r\n                    <h3 className='p-2 space-y-8 text-lg font-medium leading-6 text-gray-800 bg-yellow-500 border-gray-300 divide-y divide-gray-200 shadow-sm border-3 rounded-t-md sm:space-y-5'>\r\n                      Add a Secure Note\r\n                    </h3>\r\n                    <hr />\r\n\r\n                    <Form\r\n                      onSubmit={onSubmit}\r\n                      render={({ handleSubmit, submitError }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                          <div className='space-y-6'>\r\n                            <div className='px-4 py-5 bg-white shadow lg:rounded-b-md sm:rounded-b-md sm:p-6'>\r\n                              <div className='md:grid md:grid-cols-3 md:gap-6'>\r\n                                <div className='md:col-span-1'>\r\n                                  <Field\r\n                                    name='title'\r\n                                    component='input'\r\n                                    placeholder='Enter Name for This Note'\r\n                                    validate={required}>\r\n                                    {({ input, meta, placeholder }) => (\r\n                                      <div className='col-span-6 sm:col-span-3'>\r\n                                        <div>\r\n                                          <label\r\n                                            htmlFor='first-name'\r\n                                            className='block font-medium text-gray-700 text-md'>\r\n                                            Title\r\n                                          </label>\r\n                                          <input\r\n                                            type='text'\r\n                                            {...input}\r\n                                            placeholder={placeholder}\r\n                                            className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                          />\r\n                                        </div>\r\n                                        {meta.error && meta.touched && (\r\n                                          <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                            <div className='flex'>\r\n                                              <div className='flex-shrink-0'>\r\n                                                <XCircleIcon\r\n                                                  className='w-5 h-5 text-red-400'\r\n                                                  aria-hidden='true'\r\n                                                />\r\n                                              </div>\r\n                                              <div className='ml-3'>\r\n                                                <h3 className='text-sm font-medium text-red-800'>\r\n                                                  {meta.error}\r\n                                                </h3>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                    )}\r\n                                  </Field>\r\n\r\n                                  {/* <div className='pt-3'>\r\n                                    <label className='block font-medium text-gray-700 text-md'>\r\n                                      Attachments\r\n                                    </label>\r\n                                    <div className='flex justify-center px-6 pt-5 pb-6 mt-1 border-2 border-gray-300 border-dashed rounded-md'>\r\n                                      <div className='space-y-1 text-center'>\r\n                                        <svg\r\n                                          className='w-12 h-12 mx-auto text-gray-400'\r\n                                          stroke='currentColor'\r\n                                          fill='none'\r\n                                          viewBox='0 0 48 48'\r\n                                          aria-hidden='true'>\r\n                                          <path\r\n                                            d='M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02'\r\n                                            strokeWidth={2}\r\n                                            strokeLinecap='round'\r\n                                            strokeLinejoin='round'\r\n                                          />\r\n                                        </svg>\r\n                                        <div className='flex text-sm text-gray-600'>\r\n                                          <label\r\n                                            htmlFor='file-upload'\r\n                                            className='relative font-medium text-indigo-600 bg-white rounded-md cursor-pointer hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500'>\r\n                                            <span>Upload a file</span>\r\n                                            <input\r\n                                              id='file-upload'\r\n                                              name='noteImage'\r\n                                              type='file'\r\n                                              className='sr-only'\r\n                                            />\r\n                                          </label>\r\n                                          <p className='pl-1'>\r\n                                            or drag and drop\r\n                                          </p>\r\n                                        </div>\r\n                                        <p className='text-xs text-gray-500'>\r\n                                          PNG, JPG, GIF up to 10MB\r\n                                        </p>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div> */}\r\n                                </div>\r\n                                <div className='pb-6 mt-5 md:mt-0 md:col-span-2'>\r\n                                  <Field\r\n                                    name='caption'\r\n                                    component='textarea'\r\n                                    placeholder='Enter a Caption for This Note'\r\n                                    className='block w-full p-2 border border-gray-300 rounded-md shadow-sm h-96 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\r\n                                    validate={required}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <hr />\r\n                              <div className='flex justify-end pt-5'>\r\n                                <Link\r\n                                  to='/notes'\r\n                                  type='button'\r\n                                  className='px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500'>\r\n                                  Cancel\r\n                                </Link>\r\n                                <button\r\n                                  type='submit'\r\n                                  className='inline-flex justify-center px-4 py-2 ml-3 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                                  Save\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Transition.Child>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddNoteModal;\r\n","/** @format */\r\nimport React from \"react\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\n\r\n//REDUX\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { deleteNote } from \"../../actions/noteActions\";\r\nimport { NOTE_DELETE_RESET } from \"../../constants/noteConstants\";\r\n\r\nimport StandardModal from \"./StandardModal\";\r\n\r\nconst DeleteNoteModal = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const noteId = useParams();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = useState(true);\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const {\r\n    // loading: loadingDelete,\r\n    // error: errorDelete,\r\n    success: successDelete,\r\n  } = noteDelete;\r\n  const noteDetails = useSelector((state) => state.noteDetails);\r\n  const { note } = noteDetails;\r\n\r\n  useEffect(() => {\r\n    if (successDelete) {\r\n      dispatch({ type: NOTE_DELETE_RESET });\r\n      navigate(\"/\");\r\n    }\r\n  }, [dispatch, noteId, note, navigate, successDelete]);\r\n\r\n  if (!open) {\r\n    return <Navigate to='/' />;\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    dispatch(deleteNote(id));\r\n  };\r\n\r\n  const actions = (\r\n    <React.Fragment>\r\n      <button\r\n        type='button'\r\n        className='inline-flex justify-center w-full px-4 py-2 text-base font-medium text-white bg-red-600 border border-transparent rounded-md shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm'\r\n        onClick={() => deleteHandler(noteId.id)}>\r\n        Delete\r\n      </button>\r\n      <Link\r\n        to='/notes'\r\n        type='button'\r\n        className='inline-flex justify-center w-full px-4 py-2 mt-3 text-base font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:w-auto sm:text-sm'\r\n        onClick={() => setOpen(false)}\r\n        ref={cancelButtonRef}>\r\n        Cancel\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <StandardModal\r\n        title='Delete Note'\r\n        content='Are you sure you want to delete this note?'\r\n        actions={actions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteNoteModal;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { Fragment, useState, useEffect, useRef } from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\n\r\nimport { XCircleIcon } from \"@heroicons/react/solid\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useParams, useNavigate } from \"react-router-dom\";\r\nimport { listNoteDetails, updateNote } from \"../../actions/noteActions\";\r\nimport { NOTE_UPDATE_RESET } from \"../../constants/noteConstants\";\r\n\r\nconst required = (value) => (value ? undefined : \"Required\");\r\n\r\nconst EditNoteModal = () => {\r\n  const dispatch = useDispatch();\r\n  const noteId = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  // const [setTitle] = useState(\"\");\r\n  // const [setImage] = useState(\"\");\r\n  // const [setCaption] = useState(\"\");\r\n\r\n  const [open, setOpen] = useState(true);\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  const noteDetails = useSelector((state) => state.noteDetails);\r\n  const { note } = noteDetails;\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { success } = noteUpdate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch({ type: NOTE_UPDATE_RESET });\r\n      navigate(\"/notes\");\r\n    } else {\r\n      if (!note.name || note._id !== noteId) {\r\n        dispatch(listNoteDetails(noteId.id));\r\n      } else {\r\n      }\r\n    }\r\n  }, [dispatch, noteId, note, success, navigate]);\r\n  let formData = {\r\n    title: note.title,\r\n    caption: note.caption,\r\n    image: note.image,\r\n  };\r\n\r\n  if (!open) {\r\n    return <Navigate to='/' />;\r\n  }\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(updateNote({ _id: noteId.id, values }));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Transition.Root show={open} as={Fragment}>\r\n        <Dialog\r\n          as='div'\r\n          static\r\n          className='fixed inset-0 z-10 overflow-y-auto'\r\n          initialFocus={cancelButtonRef}\r\n          open={open}\r\n          onClose={setOpen}>\r\n          <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\r\n            <div className='flex-auto'>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-out duration-300'\r\n                enterFrom='opacity-0'\r\n                enterTo='opacity-100'\r\n                leave='ease-in duration-200'\r\n                leaveFrom='opacity-100'\r\n                leaveTo='opacity-0'>\r\n                <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 ' />\r\n              </Transition.Child>\r\n\r\n              {/* This element is to trick the browser into centering the modal contents. */}\r\n              <span\r\n                className='hidden sm:inline-block sm:align-middle sm:h-screen'\r\n                aria-hidden='true'>\r\n                &#8203;\r\n              </span>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-out duration-300'\r\n                enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\r\n                enterTo='opacity-100 translate-y-0 sm:scale-100'\r\n                leave='ease-in duration-200'\r\n                leaveFrom='opacity-100 translate-y-0 sm:scale-100'\r\n                leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\r\n                {/* This controls the actual width of modal based on responsive design */}\r\n                <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-gray-100 rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6 lg:max-w-5xl'>\r\n                  <div className='px-4 py-5 sm:p-6'>\r\n                    <h3 className='p-2 space-y-8 text-lg font-medium leading-6 text-gray-800 bg-yellow-500 border-2 border-gray-300 divide-y divide-gray-200 shadow-lg rounded-t-md sm:space-y-5'>\r\n                      Edit Password\r\n                    </h3>\r\n                    <hr />\r\n\r\n                    <Form\r\n                      onSubmit={onSubmit}\r\n                      initialValues={{\r\n                        ...formData,\r\n                      }}\r\n                      render={({ handleSubmit, submitError }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                          <div className='space-y-6'>\r\n                            <div className='px-4 py-5 bg-white shadow lg:rounded-b-md sm:rounded-b-md sm:p-6'>\r\n                              <div className='md:grid md:grid-cols-3 md:gap-6'>\r\n                                <div className='md:col-span-1'>\r\n                                  <Field\r\n                                    name='title'\r\n                                    component='input'\r\n                                    placeholder='Enter Name for This Note'\r\n                                    validate={required}>\r\n                                    {({ input, meta, placeholder }) => (\r\n                                      <div className='col-span-6 sm:col-span-3'>\r\n                                        <div>\r\n                                          <label\r\n                                            htmlFor='first-name'\r\n                                            className='block font-medium text-gray-700 text-md'>\r\n                                            Title\r\n                                          </label>\r\n                                          <input\r\n                                            type='text'\r\n                                            {...input}\r\n                                            placeholder={placeholder}\r\n                                            className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                          />\r\n                                        </div>\r\n                                        {meta.error && meta.touched && (\r\n                                          <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                            <div className='flex'>\r\n                                              <div className='flex-shrink-0'>\r\n                                                <XCircleIcon\r\n                                                  className='w-5 h-5 text-red-400'\r\n                                                  aria-hidden='true'\r\n                                                />\r\n                                              </div>\r\n                                              <div className='ml-3'>\r\n                                                <h3 className='text-sm font-medium text-red-800'>\r\n                                                  {meta.error}\r\n                                                </h3>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                    )}\r\n                                  </Field>\r\n\r\n                                  {/* <div className='pt-3'>\r\n                                    <label className='block font-medium text-gray-700 text-md'>\r\n                                      Attachments\r\n                                    </label>\r\n                                    <div className='flex justify-center px-6 pt-5 pb-6 mt-1 border-2 border-gray-300 border-dashed rounded-md'>\r\n                                      <div className='space-y-1 text-center'>\r\n                                        <svg\r\n                                          className='w-12 h-12 mx-auto text-gray-400'\r\n                                          stroke='currentColor'\r\n                                          fill='none'\r\n                                          viewBox='0 0 48 48'\r\n                                          aria-hidden='true'>\r\n                                          <path\r\n                                            d='M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02'\r\n                                            strokeWidth={2}\r\n                                            strokeLinecap='round'\r\n                                            strokeLinejoin='round'\r\n                                          />\r\n                                        </svg>\r\n                                        <div className='flex text-sm text-gray-600'>\r\n                                          <label\r\n                                            htmlFor='file-upload'\r\n                                            className='relative font-medium text-indigo-600 bg-white rounded-md cursor-pointer hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500'>\r\n                                            <span>Upload a file</span>\r\n                                            <input\r\n                                              id='file-upload'\r\n                                              name='noteImage'\r\n                                              type='file'\r\n                                              className='sr-only'\r\n                                            />\r\n                                          </label>\r\n                                          <p className='pl-1'>\r\n                                            or drag and drop\r\n                                          </p>\r\n                                        </div>\r\n                                        <p className='text-xs text-gray-500'>\r\n                                          PNG, JPG, GIF up to 10MB\r\n                                        </p>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div> */}\r\n                                </div>\r\n                                <div className='pb-6 mt-5 md:mt-0 md:col-span-2'>\r\n                                  <Field\r\n                                    name='caption'\r\n                                    component='textarea'\r\n                                    placeholder='Enter a Caption for This Note'\r\n                                    className='block w-full p-2 border border-gray-300 rounded-md shadow-sm h-96 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\r\n                                    validate={required}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <hr />\r\n                              <div className='flex justify-end pt-5'>\r\n                                <button\r\n                                  type='button'\r\n                                  className='px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                                  Cancel\r\n                                </button>\r\n                                <button\r\n                                  type='submit'\r\n                                  className='inline-flex justify-center px-4 py-2 ml-3 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                                  Save\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Transition.Child>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditNoteModal;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\n\r\nconst Title = (props) => {\r\n  return (\r\n    <div className='relative mt-2 '>\r\n      <div className='absolute inset-0 flex items-center' aria-hidden='true'>\r\n        <div className='w-full border-t border-blue-300' />\r\n      </div>\r\n      <div className='relative flex justify-start'>\r\n        <span className='py-1 pl-1 pr-3 text-sm font-medium bg-blue-500 rounded-md md:text-md lg:text-lg text-gray-50'>\r\n          {props.title}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","/** @format */\r\n/** @format */\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Sidebar from \"../navbar/Sidebar\";\r\n\r\nimport {\r\n  TrashIcon,\r\n  PencilIcon,\r\n  ChevronDoubleUpIcon,\r\n  ArrowNarrowLeftIcon,\r\n} from \"@heroicons/react/outline\";\r\n//algoliasearch\r\nimport algoliasearch from \"algoliasearch\";\r\nimport { InstantSearch, SearchBox, Hits, Index } from \"react-instantsearch-dom\";\r\nimport axios from \"axios\";\r\nimport Title from \"../misc/Title\";\r\n\r\nconst searchClient = algoliasearch(\r\n  \"51L3TF5D2J\",\r\n  \"07b0d27bbe4fa6321f738856d02293fd\"\r\n);\r\nconst passwordIndex = searchClient.initIndex(\"passwordDemo\");\r\nconst noteIndex = searchClient.initIndex(\"noteDemo\");\r\n\r\nconst SearchScreen = () => {\r\n  const [passwords, setPasswords] = useState([]);\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  //Retreive Passwords from API\r\n  useEffect(() => {\r\n    const fetchPasswords = async () => {\r\n      const { data } = await axios.get(\"/api/passwords\");\r\n      data.forEach((password) => {\r\n        password.objectID = password._id;\r\n        delete password._id;\r\n      });\r\n      setPasswords(data);\r\n    };\r\n    fetchPasswords();\r\n  }, []);\r\n\r\n  //Record Password in Algolia Index\r\n  passwordIndex.saveObjects(passwords);\r\n\r\n  //Retreive Notes from API\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      const { data } = await axios.get(\"/api/notes\");\r\n      data.forEach((note) => {\r\n        note.objectID = note._id;\r\n        delete note._id;\r\n      });\r\n      setNotes(data);\r\n    };\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  //Record Note in Algolia Index\r\n  noteIndex.saveObjects(notes);\r\n\r\n  return (\r\n    <div className='relative flex flex-1 h-screen overflow-hidden bg-gray-100'>\r\n      <Sidebar />\r\n\r\n      <div className='flex flex-col flex-1 w-0 overflow-auto'>\r\n        <InstantSearch indexName='passwordsMERN' searchClient={searchClient}>\r\n          <div className='app'>\r\n            <div className=''>\r\n              <div className='flex'>\r\n                <Link\r\n                  to='/'\r\n                  className='inline-flex items-center px-4 text-gray-500 transition duration-200 ease-in transform border-r border-gray-200 shadow-lg focus:shadow-inner rounded-l-md focus:outline-none md:hidden'>\r\n                  <ArrowNarrowLeftIcon\r\n                    className='items-center w-6 h-6'\r\n                    aria-hidden='true'\r\n                  />\r\n                </Link>\r\n                <SearchBox\r\n                  className='w-full '\r\n                  autoFocus\r\n                  translations={{\r\n                    placeholder: \"Search Everything\",\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='px-4 mx-auto max-w-7xl sm:px-6 lg:px-8'>\r\n                <div className='max-w-5xl mx-auto'>\r\n                  <Title title='Passwords' />\r\n                  <Index indexName='passwordDemo'>\r\n                    <Hits hitComponent={allPasswords} />\r\n                  </Index>\r\n                  <Title title='Notes' />\r\n                  <Index indexName='noteDemo'>\r\n                    <Hits hitComponent={allNotes} />\r\n                  </Index>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </InstantSearch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction allPasswords({ hit }) {\r\n  return (\r\n    <ul className='grid grid-cols-1 gap-5 mt-3 mb-3 overflow-auto sm:gap-6 group'>\r\n      <div className='border-r-4 rounded-md hover:border-yellow-400'>\r\n        <li className='flex col-span-1 rounded-md shadow-sm'>\r\n          <img\r\n            alt='logo '\r\n            src={`https://logo.clearbit.com/${hit.url}`}\r\n            onError={(e) => {\r\n              e.target.onerror = null;\r\n              e.target.src =\r\n                \"https://media.publit.io/file/MiscPasswordIcon.svg\";\r\n            }}\r\n            className='flex items-center flex-shrink-0 object-contain text-sm font-medium text-white shadow-sm w-14 rounded-l-md'\r\n          />\r\n\r\n          <div className='flex flex-row-reverse items-center flex-1 truncate bg-white border-t border-b border-r border-gray-200 rounded-r-md'>\r\n            <div className='flex-1 px-4 py-2 text-sm truncate'>\r\n              <a\r\n                href={hit.href}\r\n                className='font-medium text-gray-900 hover:text-gray-600'>\r\n                {hit.username}\r\n              </a>\r\n              <p className='text-gray-500 '>{hit.url}</p>\r\n            </div>\r\n            <div className='absolute flex-shrink-0 m-2 transform scale-0 group-hover:scale-100 '>\r\n              <a\r\n                href={`https://${hit.url}`}\r\n                className='inline-flex items-center justify-center w-8 h-8 mr-1 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                <ChevronDoubleUpIcon\r\n                  className='w-5 h-5 text-gray-400 rounded hover:bg-blue-700 hover:text-gray-100'\r\n                  aria-hidden='true'\r\n                />\r\n              </a>\r\n              <Link\r\n                to={`/password/${hit.objectID}/edit`}\r\n                type='button'\r\n                className='inline-flex items-center justify-center w-8 h-8 mr-1 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                <PencilIcon\r\n                  className='w-5 h-5 text-gray-400 rounded hover:bg-gray-800 hover:text-gray-100'\r\n                  aria-hidden='true'\r\n                />\r\n              </Link>\r\n              <Link\r\n                to={`/password/${hit.objectID}/delete`}\r\n                type='button'\r\n                className='inline-flex items-center justify-center w-8 h-8 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                <TrashIcon\r\n                  className='w-5 h-5 text-gray-400 rounded hover:bg-red-600 hover:text-gray-100'\r\n                  aria-hidden='true'\r\n                />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction allNotes({ hit }) {\r\n  return (\r\n    <ul className='grid grid-cols-1 gap-5 mt-3 mb-3 overflow-auto sm:gap-6 group'>\r\n      <div className='border-r-4 rounded-md hover:border-yellow-400'>\r\n        <li className='flex col-span-1 border-4 rounded-md shadow-sm border-gray-50'>\r\n          <img\r\n            alt='logo'\r\n            src='https://media.publit.io/file/noun-triangle.svg'\r\n            className='flex items-center flex-shrink-0 object-contain text-sm font-medium text-white shadow-sm w-14 rounded-l-md' //media.publit.io/file/triangle/orangeTriangle.svg\",\"\r\n          />\r\n\r\n          <div className='flex flex-row-reverse items-center flex-1 truncate bg-white border-t border-b border-r border-blue-200 rounded-r-md'>\r\n            <div className='flex-1 px-4 py-2 text-sm truncate'>\r\n              {hit.title}\r\n              <p className='text-gray-500 truncate h-11 '>{hit.caption}</p>\r\n            </div>\r\n            <div className='absolute flex-shrink-0 m-2 transform scale-0 group-hover:scale-100 '>\r\n              <Link\r\n                to={`/note/${hit.objectID}/edit`}\r\n                type='button'\r\n                className='inline-flex items-center justify-center w-8 h-8 mr-1 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                <PencilIcon\r\n                  className='w-5 h-5 text-gray-400 rounded hover:bg-gray-800 hover:text-gray-100'\r\n                  aria-hidden='true'\r\n                />\r\n              </Link>\r\n              <Link\r\n                to={`/note/${hit.objectID}/delete`}\r\n                type='button'\r\n                className='inline-flex items-center justify-center w-8 h-8 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                <TrashIcon\r\n                  className='w-5 h-5 text-gray-400 rounded hover:bg-red-600 hover:text-gray-100'\r\n                  aria-hidden='true'\r\n                />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default SearchScreen;\r\n","/** @format */\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nimport DashboardScreen from \"./components/screens/DashboardScreen\";\nimport PasswordsScreen from \"./components/screens/PasswordScreen\";\nimport NotesScreen from \"./components/screens/NoteScreen\";\nimport AddressScreen from \"./components/screens/AddressScreen\";\n\nimport AddPasswordModal from \"./components/modal/AddPasswordModal\";\nimport EditPasswordModal from \"./components/modal/EditPasswordModal\";\n// import AddAddressModal from \"./components/modal/AddAddressModal\";\nimport DeletePasswordModal from \"./components/modal/DeletePasswordModal\";\n\nimport AddNoteModal from \"./components/modal/AddNoteModal\";\nimport DeleteNoteModal from \"./components/modal/DeleteNoteModal\";\nimport EditNoteModal from \"./components/modal/EditNoteModal\";\n\nimport SearchScreen from \"./components/screens/SearchScreen\";\n\n//Toastify\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <ToastContainer className='' autoClose={3500} />\n        <Routes>\n          <Route path='/' element={<DashboardScreen />} />\n          <Route path='/dashboard' element={<DashboardScreen />} />\n          <Route path='/search' element={<SearchScreen />} />\n          <Route path='/passwords' element={<PasswordsScreen />} />\n          <Route path='/passwords/add' element={<AddPasswordModal />} />\n          <Route\n            path='/password/:id/delete'\n            element={<DeletePasswordModal />}\n          />\n          <Route path='/password/:id/edit' element={<EditPasswordModal />} />\n          <Route path='/add/note' element={<AddNoteModal />} />\n          {/* <Route path='/add/address' element={<AddAddressModal />} /> */}\n          <Route path='/notes' element={<NotesScreen />} />\n          <Route path='/note/:id/delete' element={<DeleteNoteModal />} />\n          <Route path='/note/:id/edit' element={<EditNoteModal />} />\n          <Route path='/addresses' element={<AddressScreen />} />\n        </Routes>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/** @format */\n\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  passwordListReducer,\n  passwordCreateReducer,\n  passwordDetailsReducer,\n  passwordDeleteReducer,\n  passwordUpdateReducer,\n} from \"./reducers/passwordReducers\";\n\nimport {\n  noteListReducer,\n  noteCreateReducer,\n  noteDetailsReducer,\n  noteDeleteReducer,\n  noteUpdateReducer,\n} from \"./reducers/noteReducers\";\n\nconst reducer = combineReducers({\n  passwordList: passwordListReducer,\n  passwordCreate: passwordCreateReducer,\n  passwordDetails: passwordDetailsReducer,\n  passwordDelete: passwordDeleteReducer,\n  passwordUpdate: passwordUpdateReducer,\n  noteList: noteListReducer,\n  noteCreate: noteCreateReducer,\n  noteDetails: noteDetailsReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer,\n});\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","/** @format */\nimport {\n  PASSWORD_LIST_REQUEST,\n  PASSWORD_LIST_SUCCESS,\n  PASSWORD_LIST_FAIL,\n  PASSWORD_DELETE_REQUEST,\n  PASSWORD_DELETE_SUCCESS,\n  PASSWORD_DELETE_FAIL,\n  PASSWORD_DELETE_RESET,\n  PASSWORD_CREATE_REQUEST,\n  PASSWORD_CREATE_SUCCESS,\n  PASSWORD_CREATE_FAIL,\n  PASSWORD_CREATE_RESET,\n  PASSWORD_DETAILS_REQUEST,\n  PASSWORD_DETAILS_SUCCESS,\n  PASSWORD_DETAILS_FAIL,\n  PASSWORD_UPDATE_REQUEST,\n  PASSWORD_UPDATE_SUCCESS,\n  PASSWORD_UPDATE_FAIL,\n  PASSWORD_UPDATE_RESET,\n} from \"../constants/passwordConstants\";\n\n//PASSWORDS\n\nexport const passwordListReducer = (state = { passwords: [] }, action) => {\n  switch (action.type) {\n    case PASSWORD_LIST_REQUEST:\n      return {\n        loading: true,\n        passwords: [],\n      };\n    case PASSWORD_LIST_SUCCESS:\n      return { passwords: action.payload, loading: false };\n    case PASSWORD_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const passwordDetailsReducer = (state = { password: {} }, action) => {\n  switch (action.type) {\n    case PASSWORD_DETAILS_REQUEST:\n      return { loading: true, ...state };\n    case PASSWORD_DETAILS_SUCCESS:\n      return { loading: false, password: action.payload };\n    case PASSWORD_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const passwordDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PASSWORD_DELETE_REQUEST:\n      return { loading: true };\n    case PASSWORD_DELETE_SUCCESS:\n      return { loading: false, success: true, state: {} };\n    case PASSWORD_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    case PASSWORD_DELETE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const passwordCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PASSWORD_CREATE_REQUEST:\n      return { loading: true };\n    case PASSWORD_CREATE_SUCCESS:\n      return { loading: false, success: true, state: {} };\n    case PASSWORD_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PASSWORD_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const passwordUpdateReducer = (state = { password: {} }, action) => {\n  switch (action.type) {\n    case PASSWORD_UPDATE_REQUEST:\n      return { loading: true };\n    case PASSWORD_UPDATE_SUCCESS:\n      return { loading: false, success: true, password: action.payload };\n    case PASSWORD_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PASSWORD_UPDATE_RESET:\n      return { password: {} };\n    default:\n      return state;\n  }\n};\n\n//NOTES\n\n// export const passwordListReducer = (state = { passwords: [] }, action) => {\n//   switch (action.type) {\n//     case PASSWORD_LIST_REQUEST:\n//       return {\n//         loading: true,\n//         passwords: [],\n//       };\n//     case PASSWORD_LIST_SUCCESS:\n//       return { passwords: action.payload, loading: false };\n//     case PASSWORD_LIST_FAIL:\n//       return { loading: false, error: action.payload };\n//     default:\n//       return state;\n//   }\n// };\n\n// export const passwordDeleteReducer = (state = { passwords: [] }, action) => {\n//   switch (action.type) {\n//     case PASSWORD_DELETE_REQUEST:\n//       return {\n//         passwords: [\n//           ...state.passwords.filter((password) => password !== action.payload),\n//         ],\n//         loading: true,\n//       };\n//     case PASSWORD_DELETE_SUCCESS:\n//       return { loading: false, success: true };\n//     case PASSWORD_DELETE_FAIL:\n//       return { loading: false, error: action.payload };\n//     default:\n//       return state;\n//   }\n// };\n\n// export const passwordCreateReducer = (state = {}, action) => {\n//   switch (action.type) {\n//     case PASSWORD_CREATE_REQUEST:\n//       return { loading: true };\n//     case PASSWORD_CREATE_SUCCESS:\n//       return { loading: false, success: true, state: {} };\n//     case PASSWORD_CREATE_FAIL:\n//       return { loading: false, error: action.payload };\n//     case PASSWORD_CREATE_RESET:\n//       return {};\n//     default:\n//       return state;\n//   }\n// };\n","/** @format */\r\nimport {\r\n  NOTE_LIST_REQUEST,\r\n  NOTE_LIST_SUCCESS,\r\n  NOTE_LIST_FAIL,\r\n  NOTE_DELETE_REQUEST,\r\n  NOTE_DELETE_SUCCESS,\r\n  NOTE_DELETE_FAIL,\r\n  NOTE_DELETE_RESET,\r\n  NOTE_CREATE_REQUEST,\r\n  NOTE_CREATE_SUCCESS,\r\n  NOTE_CREATE_FAIL,\r\n  NOTE_CREATE_RESET,\r\n  NOTE_DETAILS_REQUEST,\r\n  NOTE_DETAILS_SUCCESS,\r\n  NOTE_DETAILS_FAIL,\r\n  NOTE_UPDATE_REQUEST,\r\n  NOTE_UPDATE_SUCCESS,\r\n  NOTE_UPDATE_FAIL,\r\n  NOTE_UPDATE_RESET,\r\n} from \"../constants/noteConstants\";\r\n\r\n//NOTES\r\n\r\nexport const noteListReducer = (state = { notes: [] }, action) => {\r\n  switch (action.type) {\r\n    case NOTE_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n        notes: [],\r\n      };\r\n    case NOTE_LIST_SUCCESS:\r\n      return { notes: action.payload, loading: false };\r\n    case NOTE_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteDetailsReducer = (state = { note: {} }, action) => {\r\n  switch (action.type) {\r\n    case NOTE_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case NOTE_DETAILS_SUCCESS:\r\n      return { loading: false, note: action.payload };\r\n    case NOTE_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTE_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case NOTE_DELETE_SUCCESS:\r\n      return { loading: false, success: true, state: {} };\r\n    case NOTE_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case NOTE_DELETE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTE_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case NOTE_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        state: {},\r\n      };\r\n    case NOTE_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case NOTE_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteUpdateReducer = (state = { note: {} }, action) => {\r\n  switch (action.type) {\r\n    case NOTE_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case NOTE_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, note: action.payload };\r\n    case NOTE_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case NOTE_UPDATE_RESET:\r\n      return { note: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\n//REDUX\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}